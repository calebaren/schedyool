{"version":3,"sources":["Components/SideMenu.tsx","Components/Header.tsx","Components/PageHeader.tsx","Components/useForm.tsx","Components/Controls/Input.tsx","Components/Controls/Dropzone.tsx","Components/Controls/SelectField.tsx","Components/Controls/Button.tsx","Components/Controls/Controls.tsx","Pages/DataForm.tsx","Pages/DataComponent.tsx","App/App.tsx","serviceWorker.tsx","index.tsx"],"names":["useStyle","makeStyles","theme","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","palette","primary","dark","breakpoints","down","SideMenu","classes","className","useStyles","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","xs","IconButton","Badge","badgeContent","color","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","props","title","subtitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","Form","React","createRef","autoComplete","children","Input","label","type","name","value","onChange","other","TextField","Dropzone","useState","acceptedFiles","showPreviews","maxFileSize","SelectField","option","Controls","Button","text","size","onClick","initialFieldValues","fullName","email","numBlendedLearning","numSchedules","numRooms","numSetsSameDay","numPairsDiffDay","numSpecialSets","DataForm","values","setValues","handleInputChange","e","target","useForm","useEffect","console","log","InputProps","InputAdornment","required","pageContent","DataComponent","createMuiTheme","main","light","secondary","background","default","shape","borderRadius","overrides","MuiAppBar","transform","appMain","App","ThemeProvider","sitekey","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.90e4d40e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\n// withStyles, makeStyles hooks for CSS styling -> JSS\nconst useStyle = makeStyles(theme => ({\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'fixed',\n        left: '0px',\n        width: '200px',\n        height: '100%',\n        backgroundColor: theme.palette.primary.dark,\n        [theme.breakpoints.down('sm')]: {\n            width: '0px'\n        },\n    },\n}));\n\nconst SideMenu = (): any => {\n    const classes = useStyle();\n    return (\n        <div className={classes.sideMenu} >\n        </div>\n    );\n}\n\nexport default SideMenu;","import React from 'react';\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles } from '@material-ui/core';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#FFF',\n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2',\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1),\n        },\n    },\n}));\n\nconst Header = (): any => {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container alignItems=\"center\">\n                    <Grid item>\n                        <InputBase \n                            placeholder=\"Search Website\" \n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        />\n                    </Grid>\n                    <Grid item xs></Grid>\n                    <Grid item>\n                        <IconButton>\n                            <Badge badgeContent={4} color=\"secondary\" >\n                                <NotificationsNoneIcon />\n                            </Badge>\n                        </IconButton>\n                        {/* <IconButton>\n                            <Badge badgeContent={3} color=\"secondary\">\n                                <ChatBubbleOutlineIcon />\n                            </Badge>\n                        </IconButton> */}\n                        <IconButton>\n                            <PowerSettingsNewIcon />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { Paper, Card, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff',\n    },\n    pageHeader: {\n        padding: theme.spacing(4),\n        display: 'flex',\n        marginBottom: theme.spacing(2),\n    },\n    pageIcon: {\n        display: 'inline-block',\n        color: '#3c44b1',\n    },\n    pageTitle: {\n        paddingLeft: theme.spacing(4),\n        '& .MuiTypography-subtitle2': {\n            opacity: '0.6',\n        },\n    },\n}));\n\nconst PageHeader = (props: any) => {\n    const { title, subtitle, icon } = props;\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={0} square className={classes.root} >\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography \n                        variant=\"h4\"\n                        component=\"div\"\n                    >\n                        {title}\n                    </Typography>\n                    <Typography \n                        variant=\"subtitle2\"\n                        component=\"div\"\n                    >\n                        {subtitle}\n                    </Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n};\n\nexport default PageHeader;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nexport const useForm = (initialFieldValues: any) => {\n    const [values, setValues] = useState(initialFieldValues);\n    const handleInputChange = (e: any) => {\n        const { name, value } = e.target;\n        setValues({\n            ...initialFieldValues,\n            [name]: value\n        })\n    };\n\n    return {\n        values, \n        setValues, \n        handleInputChange\n    };\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '90%',\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport const Form = (props: { children: React.ReactNode; }) => {\n    const classes = useStyles();\n    const recaptchaRef = React.createRef();\n\n    return (\n        <form \n            className={classes.root} \n            autoComplete=\"off\"\n        >\n            {props.children}\n        </form>\n    );\n};","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\n\nconst Input = (props: any): JSX.Element => {\n    const { variant, label, type, name, value, onChange, ...other} = props;\n    return (\n        <TextField\n            variant={variant || \"outlined\"}\n            type={type || \"number\"}\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n        />\n    );\n};\n\nexport default Input;","/*\nhttps://www.npmjs.com/package/material-ui-dropzone\n*/\nimport React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\nconst Dropzone: React.FC = () => {\n    const [files, setFiles] = useState([]);\n    return (\n        <DropzoneArea \n            acceptedFiles={['text/txt', 'text/csv']}\n            showPreviews={true}\n            maxFileSize={5000000}\n        />\n    );\n}\n\nexport default Dropzone;\n","import React from 'react';\n\nconst SelectField = (props: any) => {\n    const {name, label, value, onChange, option} = props;\n\n    return (\n        <div>\n        </div>\n    );\n};\n\nexport default SelectField;","import React from 'react';\nimport { Button as MuiButton, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nconst Button = (props: any) => {\n    const { text, size, color, variant, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <MuiButton \n            className={classes.root}\n            variant={variant || \"contained\" }\n            size={size || \"large\" }\n            color={color || \"primary\"}\n            onClick={onClick}\n        >\n            {text}\n        </MuiButton>\n    )\n};\n\nexport default Button;","import Input from './Input';\nimport Dropzone from './Dropzone';\nimport SelectField from './SelectField';\nimport Button from './Button';\n\nconst Controls = {\n    Input,\n    Dropzone,\n    SelectField,\n    Button,\n};\n\nexport default Controls;","import React, { useEffect } from 'react';\nimport { Grid, InputAdornment } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\n\nconst initialFieldValues = {\n    fullName: '',\n    email: '',\n    numBlendedLearning: 0,\n    numSchedules: 0,\n    numRooms: 1,\n    numSetsSameDay: 0,\n    numPairsDiffDay: 0,\n    numSpecialSets: 0,\n};\n\nconst DataForm = (): any => {\n    const {values, setValues, handleInputChange} = useForm(initialFieldValues);\n\n    useEffect(() => console.log(values), [values]);\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={6}>\n                    {/* name */}\n                    <Controls.Input \n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AccountCircle />\n                            </InputAdornment>\n                            ),\n                        }}\n                        required\n                        type=\"text\"\n                        label=\"Full Name\"\n                        name=\"fullName\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                    />\n                    {/* numBlendedLearning */}\n                    <Controls.Input \n                        label=\"Blended Learning\"\n                        name=\"numBlendedLearning\"\n                        value={values.numBlendedLearning}\n                        onChange={handleInputChange}\n                    />\n                    {/* numSchedules */}\n                    <Controls.Input\n                        label=\"Number of Schedules\"\n                        name=\"numSchedules\"\n                        value={values.numSchedules}\n                        onChange={handleInputChange}\n                    />\n                    {/* numRooms */}\n                    <Controls.Input\n                        label=\"Number of Rooms\"\n                        name=\"numRooms\"\n                        value={values.numRooms}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    {/* email */}\n                    <Controls.Input \n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <EmailIcon />\n                            </InputAdornment>\n                            ),\n                        }}\n                        required\n                        type=\"text\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                    />\n                    {/* numSetsSameDay */}\n                    <Controls.Input\n                        label=\"Number of sets on the same day\"\n                        name=\"numSetsSameDay\"\n                        value={values.numSetsSameDay}\n                        onChange={handleInputChange}\n                    />\n                    {/* numPairsDiffDay */}\n                    <Controls.Input\n                        label=\"Number of pairs on different days\"\n                        name=\"numPairsDiffDay\"\n                        value={values.numPairsDiffDay}\n                        onChange={handleInputChange}\n                    />\n                    {/* numSpecialSets */}\n                    <Controls.Input\n                        label=\"Number of special sets\"\n                        name=\"numSpecialSets\"\n                        value={values.numSpecialSets}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Controls.Dropzone />\n                </Grid>\n                <Grid item xs={12}>\n                    <Controls.Button type=\"submit\" text=\"Submit\" />\n                    <Controls.Button text=\"Reset\" color=\"default\" />\n                </Grid>\n            </Grid>\n        </Form>\n    )\n};\n\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\nexport default DataForm;","import React from 'react';\nimport DataForm from './DataForm';\nimport { Paper, makeStyles } from '@material-ui/core';\n// import PageHeader from '../Components/PageHeader';\n// import { IconButton } from '@material-ui/core';\n// import SchoolIcon from '../../node_modules/@material-ui/icons/School';\n\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3),\n    },\n}));\n\nconst DataComponent = (): any => {\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {/* <PageHeader \n                title=\"Form Design\"\n                subtitle=\"Form Design with Validation\"\n                icon={\n                    <IconButton>\n                        <SchoolIcon fontSize=\"large\"/>\n                    </IconButton>\n                }\n            /> */}\n            <Paper className={classes.pageContent}>\n                <DataForm />\n            </Paper>\n        </>\n    );\n};\n\nexport default DataComponent;","import React from 'react';\nimport './App.css';\nimport 'fontsource-roboto';\nimport SideMenu from '../Components/SideMenu';\nimport Header from '../Components/Header';\nimport PageHeader from '../Components/PageHeader';\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider, IconButton } from '@material-ui/core';\nimport SchoolIcon from '@material-ui/icons/School';\nimport DataComponent from '../Pages/DataComponent';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126',\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526',\n    },\n    background: {\n      default: \"#f4f5fd\",\n    }\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: `translateZ(0)`,\n      },\n    },\n  },\n});\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '200px',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '0px'\n    },\n    width: '100%',\n  },\n});\n\nconst onChange = (value: any) => {\n  console.log(\"captcha value:\", value);\n};\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n        <PageHeader \n          title=\"School Scheduling App\"\n          subtitle=\"Schedule your students\"\n          icon={<IconButton><SchoolIcon fontSize=\"large\"/></IconButton>}\n        />\n        <DataComponent />\n        <ReCAPTCHA sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\" onChange={onChange} />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\n// const onChange = (value: any): void => {\n//   console.log(\"Captcha value:\", value)\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <ReCAPTCHA\n      sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\"\n      onChange={onChange}\n    /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}