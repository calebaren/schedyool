{"version":3,"sources":["Components/Header.tsx","Components/PageHeader.tsx","Pages/Page.tsx","Components/Controls/HtmlTooltip.tsx","Components/Controls/Input.tsx","Components/Controls/Dropzone.tsx","Components/Controls/SelectField.tsx","Components/Controls/MyButton.tsx","Components/Controls/SpecialSetsSliders.tsx","Components/Controls/Controls.tsx","Pages/Home.tsx","Pages/FormPages.tsx","Components/useForm.tsx","Pages/FormFirstPage.tsx","Pages/FormMiddlePage.tsx","Pages/FormSubmitPage.tsx","Pages/FormPagesList.tsx","Pages/MultistepFormPages/PageOne.tsx","Pages/MultistepFormPages/PageTwo.tsx","Pages/MultistepFormPages/PageThree.tsx","Pages/MultistepFormPages/PageFour.tsx","Pages/MultistepFormPages/PageFive.tsx","Pages/MultistepFormPages/PageSix.tsx","Pages/DataForm.tsx","Pages/Scheduler.tsx","Pages/DownloadFile.tsx","Pages/Instructions.tsx","App/App.tsx","serviceWorker.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","backgroundColor","palette","primary","dark","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Header","props","title","children","classes","useTheme","useState","open","setOpen","pages","text","icon","style","color","url","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","to","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","map","page","i","textDecoration","key","ListItem","button","ListItemIcon","ListItemText","pageHeader","textAlign","marginBottom","pageIcon","breakpoints","pageTitle","opacity","PageHeader","subtitle","Paper","elevation","square","Card","component","pageContent","margin","Page","other","TempTooltip","withStyles","tooltip","maxWidth","fontSize","typography","pxToRem","Tooltip","StartIcon","helpText","InputAdornment","arrow","interactive","placement","Input","label","type","name","value","error","onInput","breakpoint","Grid","item","xs","TextField","fullWidth","InputProps","startAdornment","helperText","Dropzone","values","handleFileAdd","handleFileDelete","filesLimit","initialFiles","acceptedFiles","maxFileSize","showPreviews","showFileNames","previewGridProps","container","justify","previewText","dropzoneText","onDrop","file","onDelete","marginTop","formControl","minWidth","SelectField","gradeIndex","setIndex","handlePackedSetsChange","FormControl","InputLabel","Select","onClose","onOpen","packedSpecialSets","onChange","e","MenuItem","Array","x","Button","size","Controls","SpecialSliders","defaultValue","handleSliderChange","displayValue","Slider","step","min","max","marks","valueLabelDisplay","getAriaValueText","valueLabelFormat","Home","paragraph","FormPages","FirstPage","nextStep","handleInputChange","sm","preventDefault","MiddlePage","prevStep","SubmitPage","handleSubmit","fullName","email","numBlendedLearning","numDays","maxGrade","numRooms","numSetsSameDay","numPairsDiffDay","numSpecialSets","specialSets","mainFile","diffFile","roomFile","sameFile","gutterBottom","secondary","length","toString","PagesList","PageOne","AccountCircle","required","PageTwo","helpTexts","handleGradeChange","href","target","rel","PageThree","PageFour","handleSpecialSetChange","align","PageFive","PageSix","y","j","maxGrades","initialFieldValues","numSchedules","DataForm","setValues","errors","setErrors","files","reader","FileReader","onloadend","evt","res","result","console","log","readAsText","parseInt","newSpecialSets","concat","from","slice","oldSet","set","grade","oldPackedSet","useForm","temp","sameFileMissing","diffFileMissing","Object","every","window","alert","filter","join","validate","payload","fullname","timelimit","num_students","num_rooms","num_days","max_grade","num_same_day_sets","num_diff_day_pairs","num_special_sets","fraction_for_special_set","num_rooms_to_be_packed_into","diff_file","main_file","room_file","same_file","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","Scheduler","DownloadFile","downloadData","document","createElement","mode","blob","URL","createObjectURL","a","download","click","id","this","React","Component","source","createMuiTheme","main","light","background","default","shape","borderRadius","overrides","MuiAppBar","transform","App","ThemeProvider","path","Instructions","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9c0703da.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { AppBar, Toolbar, IconButton, makeStyles, Typography, Theme, createStyles, useTheme, CssBaseline, Drawer, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport SchoolIcon from '@material-ui/icons/School';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: theme.palette.primary.dark,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }),\n);\n\nconst Header = (props: any) => {\n  const { title, children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const pages = [\n    {\n      text: 'Home',\n      icon: <HomeIcon style={{ color: '#FFF' }} />,\n      url: '/'\n    },\n    {\n      text: 'Instructions',\n      icon: <InfoIcon style={{ color: '#FFF' }} />,\n      url: '/instructions'\n    },\n    {\n      text: 'Schedyool',\n      icon: <SchoolIcon style={{ color: '#FFF' }} />,\n      url: '/scheduler'\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to=\"/\">\n            <IconButton>\n              <SchoolIcon style={{ color: '#FFF' }} />\n            </IconButton>\n          </Link>\n          <Typography variant=\"h6\" noWrap>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: '#FFF' }} /> : <ChevronRightIcon style={{ color: '#FFF' }} />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {pages.map((page, i) => (\n            <Link to={page.url} style={{ textDecoration: 'none', color: '#FFF' }} key={i}>\n              <ListItem button key={page.text}>\n                <ListItemIcon>{page.icon}</ListItemIcon>\n                <ListItemText color=\"inherit\" primary={page.text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        {children}\n      </main>\n    </div>\n  );\n}\n\nexport default Header;\n","// calebaren.github.io\nimport React from 'react';\nimport { Paper, Card, Typography, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff',\n    },\n    pageHeader: {\n        padding: theme.spacing(4),\n        textAlign: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        marginBottom: theme.spacing(2),\n    },\n    pageIcon: {\n        display: 'inline-block',\n        color: '#3c44b1',\n        [theme.breakpoints.width('sm')]: {\n            display: 'none',\n        },\n    },\n    pageTitle: {\n        // padding: theme.spacing(4),\n        '& .MuiTypography-subtitle2': {\n            opacity: '0.6',\n        },\n    },\n}));\n\nconst PageHeader = (props: any) => {\n    const { title, subtitle, icon } = props;\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={0} square className={classes.root} >\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography \n                        variant=\"h4\"\n                        component=\"div\"\n                    >\n                        {title}\n                    </Typography>\n                    <Typography \n                        variant=\"subtitle2\"\n                        component=\"div\"\n                    >\n                        {subtitle}\n                    </Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n};\n\nexport default PageHeader;","// calebaren.github.io\nimport React from 'react';\nimport { Paper, makeStyles, IconButton } from '@material-ui/core';\nimport PageHeader from '../Components/PageHeader';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3),\n    },\n}));\n\nconst Page = (props: any): any => {\n    const { children, title, subtitle, ...other } = props;\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Paper className={classes.pageContent} {...other} >\n                <PageHeader \n                    title={title}\n                    subtitle={subtitle}\n                />\n                {children}\n            </Paper>\n        </div>\n    );\n};\n\nexport default Page;","// calebaren.github.io\nimport React from 'react';\nimport { withStyles, Theme, Tooltip, Typography, InputAdornment } from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst TempTooltip = withStyles((theme: Theme) => ({\n    tooltip: {\n        // backgroundColor: theme.palette.background.paper,\n        // color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 200,\n        fontSize: theme.typography.pxToRem(13),\n        // border: '1px solid #dadde9',\n    }, \n}))(Tooltip);\n\n\nconst StartIcon = (props: any) => {\n    const { helpText, icon } = props;\n\n    return (\n        <InputAdornment position=\"start\">\n            <TempTooltip \n                arrow \n                interactive\n                placement=\"left-end\"\n                title={\n                    <>\n                        {/* <Typography color=\"inherit\">\n                            {helpTitle}\n                        </Typography> */}\n                        {helpText}\n                    </>\n                }\n            >\n                {icon || <HelpOutlineIcon />}\n            </TempTooltip>\n        </InputAdornment>\n    );\n};\n\n\nexport default StartIcon;","// calebaren.github.io\nimport React from 'react';\nimport { TextField, Grid, makeStyles } from '@material-ui/core';\nimport StartIcon from './HtmlTooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n        margin: theme.spacing(1.5),\n    }\n}));\n\nconst Input = (props: any): JSX.Element => {\n    const { \n        variant, \n        label, \n        type, \n        name, \n        value, \n        error=null, \n        onInput,\n        breakpoint,\n        helpText,\n        icon,\n        ...other\n    } = props;\n\n    const classes = useStyles();\n    return (\n        <Grid item xs={breakpoint || 12}>\n            <div className={classes.root}>\n                <TextField\n                    fullWidth={true}\n                    InputProps={{\n                        startAdornment: (<StartIcon helpText={helpText} icon={icon} />),\n                    }}\n                    variant={variant || \"outlined\"}\n                    type={type || \"number\"}\n                    label={label}\n                    name={name}\n                    value={value}\n                    onInput={onInput}\n                    {...(error && {error: true, helperText: error})}\n                    {...other}\n                />\n            </div>\n        </Grid>\n    );\n};\n\nexport default Input;","/*\nhttps://www.npmjs.com/package/material-ui-dropzone\n*/\n// calebaren.github.io\nimport React from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\n\nconst Dropzone = (props: any) => {\n    const { values, name, handleFileAdd, handleFileDelete, text } = props;\n    return (\n        <DropzoneArea\n            filesLimit={1}\n            initialFiles={values[name][0]}\n            acceptedFiles={[\".csv, text/csv, text/plain, application/vnd.ms-excel, application/csv, text/x-csv, application/x-csv, text/comma-separated-values, text/x-comma-separated-values\"]}\n            maxFileSize={26000}\n            showPreviews={false}\n            showFileNames={true}\n            previewGridProps={{ container: { spacing: 0, direction: 'row', justify: 'center' } }}\n            previewText=\"Selected files\"\n            dropzoneText={text}\n            onDrop={file => handleFileAdd(file, name)}\n            onDelete={() => handleFileDelete(name)}\n        />\n    );\n}\n\nexport default Dropzone;\n","// calebaren.github.io\nimport React, { useState } from 'react';\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      display: 'block',\n      marginTop: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n  }),\n);\n\nconst SelectField = (props: any) => {\n    const { gradeIndex, setIndex, values, handlePackedSetsChange } = props;\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <FormControl className={classes.formControl}>\n            <InputLabel>Grade {gradeIndex}</InputLabel>\n            <Select\n                open={open}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                value={values.packedSpecialSets[setIndex][gradeIndex]}\n                onChange={(e:any) => handlePackedSetsChange(e, setIndex, gradeIndex)}\n            >\n                <MenuItem value={100}>\n                    <em>None</em>\n                </MenuItem>\n                {\n                    [...Array(21)].map((x: any, i: any) => {\n                        return (<MenuItem key={i} value={i}>{i}</MenuItem>);\n                    })\n                }\n                {/* <MenuItem value={10}>Ten</MenuItem>\n                <MenuItem value={20}>Twenty</MenuItem>\n                <MenuItem value={30}>Thirty</MenuItem> */}\n            </Select>\n        </FormControl>\n    );\n};\n\nexport default SelectField;","import React from 'react';\nimport { Button as MuiButton, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\nconst Button = (props: any) => {\n    const { text, size, color, variant, ...other } = props;\n    const classes = useStyles();\n\n    return (\n        <MuiButton \n            className={classes.root}\n            variant={variant || \"contained\" }\n            size={size || \"large\" }\n            color={color || \"primary\"}\n            {...other}\n        >\n            {text}\n        </MuiButton>\n    )\n};\n\nexport default Button;","// calebaren.github.io\nimport React from 'react';\nimport { Slider, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n        margin: theme.spacing(2),\n    }\n}));\n\nconst SetsSliders = (props: any) => {\n    const {defaultValue=null, handleSliderChange} = props;\n    const classes = useStyles();\n\n    const displayValue = (x: any): string => {\n        return `${x*1000 / 10}%`;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Slider\n                value={defaultValue || 1.0}\n                step={0.01}\n                min={0}\n                max={1}\n                marks={[\n                    {value: 0, label:'0%'}, \n                    {value: 0.5, label:'50%'},\n                    {value: 1, label:'100%'},\n                ]}\n                valueLabelDisplay=\"on\"\n                getAriaValueText={displayValue}\n                valueLabelFormat={displayValue}\n                onChange={handleSliderChange}\n            />\n        </div>\n    );\n}\n\nexport default SetsSliders;\n","// calebaren.github.io\nimport Input from './Input';\nimport Dropzone from './Dropzone';\nimport SelectField from './SelectField';\nimport Button from './MyButton';\nimport SpecialSliders from './SpecialSetsSliders';\n\nconst Controls = {\n    Input,\n    Dropzone,\n    SelectField,\n    Button,\n    SpecialSliders,\n};\n\nexport default Controls;","// calebaren.github.io\nimport React from 'react';\nimport Page from './Page';\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport Controls from '../Components/Controls/Controls';\n\nconst Home = (): any => {\n    return (\n        <Page title=\"Welcome to Schedyool!\" subtitle=\"A free school scheduling app for COVID-19.\" >\n            <Typography paragraph>\n                Thanks to the requirements of blended virtual and physical learning, principals have the\n                daunting task of scheduling students while satisfying several constraints:\n          </Typography>\n            <Typography paragraph>\n                1.  the number of students in each classroom cannot exceed its \"socially-distanced\" capacity;\n          </Typography>\n            <Typography paragraph>\n                2.  sets of students such as siblings and members of learning pods who wish to attend\n                school on the same days should be allowed to;\n          </Typography>\n            <Typography paragraph>\n                3.  pairs of students who wish to attend school on different days, for whatever reason,\n                should be allowed to;  and\n          </Typography>\n            <Typography paragraph>\n                4.  sets of students such as those learning English as a new language (ENL) or needing\n                integrated co-teaching (ICT) should be handled appropriately.\n          </Typography>\n            <Typography paragraph>\n                Schedyool simplifies your job by doing the scheduling for you.  You provide information on\n                the students, without giving any students' names, and, in most cases, Schedyool will find and e-mail\n                you a schedule.\n          </Typography>\n\n            <Typography paragraph> Click a button below to get started.  </Typography>\n\n            <Link to=\"/instructions\"> <Controls.Button text=\"Instructions\" /> </Link>\n\n            <Link to=\"/scheduler\"> <Controls.Button text=\"Schedyool!\" /> </Link>\n\n            <Typography paragraph>\n                Powered by AMPL (TM) algebraic modeling software and Gurobi (TM) optimization\n                software, Schedyool is free school-scheduling software specifically for\n                the scheduling of blended learning during Covid-19.  For\n                help, e-mail help@schedyool.com.\n            </Typography>\n\n            <Typography paragraph variant=\"body2\">\n                DISCLAIMER:  By using Schedyool, you acknowledge that Schedyool comes with no express or\n                implied warranty.  There is no warranty of any kind concerning the fitness of the Schedyool results\n                for any use.  There is no guaranty that Schedyool will function as intended.  In particular,\n                in some cases Schedyool may produce no schedule at all.  You acknowledge\n                that any schedule produced by Schedyool will be manually reviewed by the school's\n                principal for appropriateness before being implemented.\n            </Typography>\n\n        </Page>\n    );\n};\n\nexport default Home;\n","// calebaren.github.io\nimport FirstPage from './FormFirstPage';\nimport MiddlePage from './FormMiddlePage';\nimport SubmitPage from './FormSubmitPage';\n\nconst FormPages = {\n    FirstPage,\n    MiddlePage,\n    SubmitPage,\n};\n\nexport default FormPages;","// calebaren.github.io\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nexport const useForm = (initialFieldValues: any) => {\n    const [values, setValues] = useState(initialFieldValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = (e: any) => {\n        const { name, value } = e.target;\n        if ( parseInt(value) ) {\n            if ( parseInt(value) >= 0) {\n                setValues({\n                    ...values,\n                    [name]: parseInt(value)\n                })\n            }\n        } else {\n            setValues({\n                ...values,\n                [name]: value\n            })\n        }\n    };\n\n    // handles changes to max grade (and updates packedSpecialSets)\n    const handleGradeChange = (e: any) => {\n        const { value } = e.target;\n        if ( parseInt(value) ) {\n            if( parseInt(value) >= 0) {\n                setValues({\n                    ...values,\n                    maxGrade: parseInt(value),\n                    packedSpecialSets: \n                        Array.from(Array(values.numSpecialSets), () => {\n                            return Array.from(Array(value), () => 100)\n                        })\n                })\n            } else {\n                setValues({\n                    ...values,\n                    maxGrade: 0,\n                    packedSpecialSets: \n                        Array.from(Array(values.numSpecialSets), () => {\n                            return Array.from(Array(1), () => 100)\n                        }),\n                })\n            }\n        } else {\n            setValues({\n                ...values,\n                maxGrade: value,\n                packedSpecialSets: \n                    Array.from(Array(values.numSpecialSets), () => {\n                        return Array.from(Array(1), () => 100)\n                    }),\n            })\n        }\n    }\n\n    const handleFileAdd = (files: any, name: any) => {\n        const file = files[0]\n        const reader = new FileReader();\n        reader.onloadend = function (evt: any) {\n            const res = evt.target.result;\n            console.log(res)\n            setValues({\n                ...values,\n                [name]: [file.name, res],\n            });\n        }\n        reader.readAsText(file);\n        // setValues({\n        //     ...values,\n        //     [name]: [file]\n        // });\n    };\n\n    const handleFileDelete = (name: any) => {\n        setValues({\n            ...values,\n            [name]: ''\n        });\n    };\n\n    const handleSpecialSetChange = (e: any) => {\n        // // if new special set is greater, then append 1s.\n        const { value } = e.target;\n\n        if ( parseInt(value) ) {\n            if ( parseInt(value) >= 0) {\n                const newSpecialSets = parseInt(value);\n                if (newSpecialSets > values.specialSets.length) {\n                    setValues({\n                        ...values,\n                        numSpecialSets: newSpecialSets,\n                        specialSets: values.specialSets.concat(\n                            Array.from(Array(newSpecialSets-values.numSpecialSets), () => 1)\n                        ),\n                        packedSpecialSets: values.packedSpecialSets.concat(\n                            Array.from(Array(newSpecialSets-values.numSpecialSets), () => {\n                                return Array.from(Array(values.maxGrade), () => 100)\n                            })\n                        ),\n                    })\n                } else {\n                    setValues({\n                        ...values,\n                        numSpecialSets: newSpecialSets,\n                        specialSets: values.specialSets.slice(0, newSpecialSets),\n                        packedSpecialSets: values.packedSpecialSets.slice(0, newSpecialSets),\n                    })\n                }\n            }\n        } else {\n            setValues({\n                ...values,\n                numSpecialSets: '',\n                specialSets: [],\n            });\n        }\n    };\n\n    const handleSliderChange = (e: any, value: any, i: any) => {\n        const oldSet = values.specialSets;\n        oldSet[i] = value;\n        setValues({\n            ...values,\n            specialSets: oldSet,\n        });\n    };\n\n    const handlePackedSetsChange = (e: any, set: any, grade: any) => {\n        const oldPackedSet = values.packedSpecialSets;\n        oldPackedSet[set][grade] = e.target.value;\n        setValues({\n            ...values,\n            packedSpecialSets: oldPackedSet,\n        });\n    }\n\n    return {\n        values, \n        setValues, \n        handleFileAdd,\n        handleFileDelete,\n        errors,\n        setErrors,\n        handleInputChange,\n        handleSpecialSetChange,\n        handleSliderChange,\n        handlePackedSetsChange,\n        handleGradeChange,\n    };\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '90%',\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport const Form = (props: any) => {\n    const classes = useStyles();\n    const { children, ...other } = props;\n\n    return (\n        <form \n            className={classes.root} \n            autoComplete=\"off\"\n            {...other}\n        >\n            {children}\n        </form>\n    );\n};","// calebaren.github.io\nimport React from 'react';\nimport { Grid, Divider } from '@material-ui/core';\nimport Controls from '../Components/Controls/Controls';\n\nconst FormFirstPage = (props: any) => {\n    const { nextStep, handleInputChange, values, children, ...other } = props;\n    const myContinue = (e: any) => {\n        e.preventDefault();\n        nextStep();\n    }\n\n    return (\n        <Grid container>\n            {children}\n            <Divider />\n            <Grid item sm={12}>\n                <Controls.Button\n                    text=\"Continue\"\n                    color=\"primary\"\n                    onClick={myContinue}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default FormFirstPage;","// calebaren.github.io\nimport React from 'react';\nimport { Grid, Divider } from '@material-ui/core';\nimport Controls from '../Components/Controls/Controls';\n\nconst FormMiddlePage = (props: any) => {\n    const { nextStep, prevStep, children } = props;\n    const myContinue = (e: any) => {\n        e.preventDefault();\n        nextStep();\n    }\n\n    const myPrevious = (e: any) => {\n        e.preventDefault();\n        prevStep();\n    }\n\n    return (\n        <Grid container>\n            {children}\n            <Divider />\n            <Grid item sm={12}>\n                <Controls.Button\n                    text=\"Continue\"\n                    color=\"primary\"\n                    onClick={myContinue}\n                />\n                <Controls.Button\n                    text=\"Back\"\n                    color=\"default\"\n                    onClick={myPrevious}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default FormMiddlePage;","// calebaren.github.io\nimport React from 'react';\nimport { Grid, Divider, List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport Controls from '../Components/Controls/Controls';\n\nconst FormSubmitPage = (props: any) => {\n    const { handleSubmit, prevStep, handleInputChange, values, children } = props;\n    const {\n        fullName, email, numBlendedLearning, numDays, maxGrade, numRooms, packedSpecialSets,\n        numSetsSameDay, numPairsDiffDay, numSpecialSets, specialSets,\n        mainFile, diffFile, roomFile, sameFile,\n    } = values;\n\n    const myPrevious = (e: any) => {\n        e.preventDefault();\n        prevStep();\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h5\" gutterBottom={true}>\n                Confirm before submitting\n            </Typography>\n            <Divider variant=\"fullWidth\" />\n            <List>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Full Name:\"\n                        secondary={fullName.length ? fullName : \"Missing!\"}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Email:\"\n                        secondary={email.length ? email : \"Missing!\"}\n                    />\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                    <ListItemText \n                        primary=\"Number of students in blended learning\"\n                        secondary={numBlendedLearning}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Number of schedules\"\n                        secondary={numDays}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Number of classrooms\"\n                        secondary={numRooms}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Maximum grade\"\n                        secondary={maxGrade}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Number of sets of students to be scheduled on the same day\"\n                        secondary={numSetsSameDay}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Number of pairs of students to be scheduled on different days\"\n                        secondary={numPairsDiffDay}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Number of special sets of students\"\n                        secondary={numSpecialSets}\n                    />\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                    <ListItemText \n                        primary=\"Fraction of special sets in each classroom\"\n                        secondary={specialSets.toString().length === 0 ? 'No special groups selected' : specialSets.toString() }\n                    />\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                    <ListItemText \n                        primary=\"Special sets in classrooms by grade\"\n                        secondary={packedSpecialSets.toString().length === 0 ? 'No special groups selected' : packedSpecialSets.toString()}\n                    />\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                    <ListItemText \n                        primary=\"Main File\"\n                        secondary={mainFile[0] ? mainFile[0] : \"No file...\"}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Rooms File\"\n                        secondary={roomFile[0] ? roomFile[0] : \"No file...\"}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Same File\"\n                        secondary={sameFile[0] ? sameFile[0] : \"No file...\"}\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemText \n                        primary=\"Diff File\"\n                        secondary={diffFile[0] ? diffFile[0] : \"No file...\"}\n                    />\n                </ListItem>\n            </List>\n            <Divider />\n            <Grid item sm={12}>\n                <Controls.Button \n                    type=\"submit\" \n                    value=\"Submit\" \n                    text=\"Submit\" \n                    onClick={(e: Event) => handleSubmit(e)}\n                />\n                <Controls.Button\n                    text=\"Back\"\n                    color=\"default\"\n                    onClick={myPrevious}\n                />\n            </Grid>\n        </div>\n    )\n}\n\nexport default FormSubmitPage;\n","// calebaren.github.io\nimport PageOne from './MultistepFormPages/PageOne';\nimport PageTwo from './MultistepFormPages/PageTwo';\nimport PageThree from './MultistepFormPages/PageThree';\nimport PageFour from './MultistepFormPages/PageFour';\nimport PageFive from './MultistepFormPages/PageFive';\nimport PageSix from './MultistepFormPages/PageSix';\n\n\nconst PagesList = {\n    PageOne,\n    PageTwo,\n    PageThree,\n    PageFour,\n    PageFive,\n    PageSix,\n};\n\nexport default PagesList;","// calebaren.github.io\nimport React from 'react';\nimport { AccountCircle } from '@material-ui/icons';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\n\n\nconst PageOne = (props: any) => {\n    const { values, nextStep, handleInputChange } = props;\n    return (\n        <FormPages.FirstPage\n            nextStep={nextStep}\n            handleInputChange={handleInputChange}\n            values={values}\n        >\n            <Controls.Input\n                helpText=\"Enter your name.\"\n                icon={<AccountCircle />}\n                type=\"text\"\n                label=\"Name\"\n                name=\"fullName\"\n                value={values.fullName}\n                onInput={handleInputChange}\n            // error={errors.fullName}\n            />\n            <Controls.Input\n                helpText=\"Enter your email.\"\n                icon={<EmailIcon />}\n                required\n                type=\"text\"\n                label=\"Email\"\n                name=\"email\"\n                value={values.email}\n                onInput={handleInputChange}\n            // error={errors.email}\n            />\n        </FormPages.FirstPage>\n    );\n};\n\nexport default PageOne;\n","// calebaren.github.io\nimport React from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography } from '@material-ui/core';\n\n\nconst PageTwo = (props: any) => {\n    const { values, nextStep, prevStep, helpTexts, handleInputChange, handleGradeChange } = props;\n    return (\n        <FormPages.MiddlePage\n            nextStep={nextStep}\n            prevStep={prevStep}\n            handleInputChange={handleInputChange}\n            values={values}\n        >\n            <Typography variant=\"body2\" paragraph>\n                Enter the number of students in the school who will participate in blended learning. Later, you will need to provide details about the students via <code>.csv</code> (comma-separated-values) files. A tutorial on how to save your Excel files to <code>.csv</code> is available <a href=\"https://support.microsoft.com/en-us/office/save-a-workbook-to-text-format-txt-or-csv-3e9a9d6c-70da-4255-aa28-fcacf1f081e6\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> or see the instructions <a href=\"/instructions\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n            </Typography>\n            <Controls.Input\n                helpText={helpTexts.numBlendedLearning}\n                label=\"Number of blended learning students\"\n                name=\"numBlendedLearning\"\n                value={values.numBlendedLearning}\n                onInput={handleInputChange}\n            />\n            <Typography variant=\"body2\" paragraph>\n                Input the maximum grade. For instance, a K-5 elementary school has a maximum grade of 5.\n            </Typography>\n            <Controls.Input\n                helpText={helpTexts.maxGrade}\n                label=\"Maximum grade level\"\n                name=\"maxGrade\"\n                value={values.maxGrade}\n                onInput={handleGradeChange}\n            />\n            <Typography variant=\"body2\" paragraph>\n                Enter the number of schedules (cohorts) you need. For instance, if your student body will be split between Mondays, Tuesdays, and alternate Wednesdays, and Thursdays, Fridays, and alternate Wednesdays, this number would be <strong>2</strong>. For those attending in person 1/3 of the time, this number would be <strong>3</strong>.\n            </Typography>\n            <Controls.Input\n                helpText={helpTexts.numDays}\n                label=\"Number of schedules\"\n                name=\"numDays\"\n                value={values.numDays}\n                onInput={handleInputChange}\n            />\n            <Typography variant=\"body2\" paragraph>\n                Enter the number of classrooms available each day.\n            </Typography>\n            <Controls.Input\n                helpText={helpTexts.numRooms}\n                label=\"Number of classrooms per day\"\n                name=\"numRooms\"\n                value={values.numRooms}\n                onInput={handleInputChange}\n            />\n        </FormPages.MiddlePage>\n    );\n};\n\nexport default PageTwo;\n","// calebaren.github.io\nimport React from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography } from '@material-ui/core';\n\n\nconst PageThree = (props: any) => {\n    const { values, nextStep, prevStep, helpTexts, handleInputChange } = props;\n    return (\n        <FormPages.MiddlePage\n            nextStep={nextStep}\n            prevStep={prevStep}\n            handleInputChange={handleInputChange}\n            values={values}\n        >\n            <Typography variant=\"body2\" paragraph>\n                Enter the number of learning pods, sets of siblings, or other special sets of students who should attend in-person instruction on the same day. These sets can be as large as you want. Please enter the number of such sets (or 0 if there are none. <em>Note: Schedyool may not succeed at satisfying all the constraints.</em>\n            </Typography>\n            <Controls.Input\n                helpText={helpTexts.numSetsSameDay}\n                label=\"Number of same-day sets\"\n                name=\"numSetsSameDay\"\n                value={values.numSetsSameDay}\n                onInput={handleInputChange}\n            />\n            <Typography variant=\"body2\" paragraph>\n                You may also specify pairs of students who should be scheduled on different days. Enter the number of such pairs (or 0 if there are none).\n            </Typography>\n\n            <Controls.Input\n                helpText={helpTexts.numPairsDiffDay}\n                label=\"Number of different-day pairs\"\n                name=\"numPairsDiffDay\"\n                value={values.numPairsDiffDay}\n                onInput={handleInputChange}\n            />\n        </FormPages.MiddlePage>\n    );\n};\n\nexport default PageThree;\n","// calebaren.github.io\nimport React from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography } from '@material-ui/core';\n\n\nconst PageFour = (props: any) => {\n    const { values, nextStep, prevStep, helpTexts, handleInputChange, handleSpecialSetChange } = props;\n    return (\n        <FormPages.MiddlePage\n            nextStep={nextStep}\n            prevStep={prevStep}\n            handleInputChange={handleInputChange}\n            handleSpecialSetChange={handleSpecialSetChange}\n            values={values}\n        >\n            <Typography\n                variant=\"h6\"\n                align='left'\n                gutterBottom={true}\n            >\n                Special sets.\n            </Typography>\n            <Typography variant=\"body2\" paragraph >\n                You may also specify sets of students (e.g., ICT and ENL students) for special consideration. You can enter as many sets as you wish but you probably only have a few. Let's call these \"special sets.\" The treatment of these sets is a bit complicated. Enter here the number of special sets, 0 if there are none.\n            </Typography>\n            <Controls.Input\n                helpText={helpTexts.numSpecialSets}\n                label=\"Number of special sets\"\n                name=\"numSpecialSets\"\n                value={values.numSpecialSets}\n                onInput={handleSpecialSetChange}\n            />\n        </FormPages.MiddlePage>\n    );\n};\n\nexport default PageFour;\n","// calebaren.github.io\nimport React from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography, Grid } from '@material-ui/core';\n\n\nconst PageFive = (props: any) => {\n    const { values, nextStep, prevStep, handleSliderChange } = props;\n\n    return (\n        <FormPages.MiddlePage\n            nextStep={nextStep}\n            prevStep={prevStep}\n            values={values}\n        >\n            <Typography\n                variant=\"h6\"\n                align='left'\n                gutterBottom={true}\n            >\n                Fraction of special sets in classrooms.\n            </Typography>\n            <Typography variant=\"body2\" paragraph >\n                Schedyool will strive to not place too many students from any one special set in any classroom, represented as a fraction of the total number of students in the room. For example, you may want the fraction of students in any classroom from the first special set to be at most 40%. For each special set, you can specify a different fraction.  Enter the fractions here, one for each special set, in the order in which you will give the special sets (e.g., ICT before ENL).\n            </Typography>\n            <Typography paragraph>\n                Use the sliders to input the fraction of students from each special set in any classroom.\n            </Typography>\n            <Grid container>\n            {\n            values.specialSets.map((x: any, i: number) => {\n                return (\n                    <>\n                        <Grid item xs={2}>\n                            <Typography variant=\"h6\" paragraph align='center' >\n                                Set {i+1}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={10}>\n                            <Controls.SpecialSliders\n                                defaultValue={x}\n                                key={i}\n                                handleSliderChange={(e: any, value: any) => handleSliderChange(e,value,i)} \n                            />\n                        </Grid>\n                    </>\n                );\n            })}\n            </Grid>\n            {/* <Controls.Input\n                helpText={helpTexts.numSpecialSets}\n                label=\"Number of special sets\"\n                name=\"numSpecialSets\"\n                value={values.numSpecialSets}\n                onInput={handleInputChange}\n            /> */}\n        </FormPages.MiddlePage>\n    );\n};\n\nexport default PageFive;\n","// calebaren.github.io\nimport React from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography, Grid } from '@material-ui/core';\n\n\nconst PageSix = (props: any) => {\n    const { values, nextStep, prevStep, handlePackedSetsChange } = props;\n    return (\n        <FormPages.MiddlePage\n            nextStep={nextStep}\n            prevStep={prevStep}\n            values={values}\n        >\n            <Typography\n                variant=\"h6\"\n                align='left'\n                gutterBottom={true}\n            >\n                Special sets in classroom by grade.\n            </Typography>\n            <Typography variant=\"body2\" paragraph>\n                In addition, you may ask Schedyool to <em>pack</em> the students of each special set into a small number\nof classrooms in order to minimize the number of special teachers needed (for, e.g., ICT or ENL).  For <strong>each</strong> special set, you need to enter one number <strong>for each grade</strong>.\n            </Typography>\n            <Typography variant=\"body2\" paragraph>\n                As an example, if there are 6 grades in your school and you want to specify special sets of students for ICT and ENL students, you will need to enter 6 numbers of rooms for the ICT students (1 number of rooms for each grade) and 6 numbers of rooms for the ENL students, for a total of 12 numbers\nof rooms. These numbers should ideally be small (between 1-3) because they are classrooms. For example, 1 room (for kindergarten), 1 room (for 1st grade), 2 rooms (for 2nd grade), 2 rooms (for 3rd grade), 1 room (for 4th grade),and 2 rooms (for 5th grade) if you are a K-5 grade school. If you have no such constraint, select <code>None</code>.  <em>Remember, you will have to enter these numbers for each special set of students.</em>\n            </Typography>\n\n            <Grid container>\n            {\n                values.specialSets.map((x: any, i: number) => {\n                    return (\n                        <div key={i}>\n                            <Grid item xs={2}>\n                                <Typography>\n                                    Set {i+1}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                                {[...Array(values.maxGrade + 1)].map((y: any, j: number) => {\n                                    return (\n                                        <Controls.SelectField\n                                            key={j}\n                                            setIndex = {i}\n                                            gradeIndex = {j}\n                                            maxGrade={values.maxGrades}\n                                            values={values}\n                                            handlePackedSetsChange={handlePackedSetsChange}\n                                        />\n                                    )\n                                })}\n                            </Grid>\n                        </div>\n                    )\n                })\n            }\n            </Grid>\n            {/* <Controls.Input\n                helpText={helpTexts.numSpecialSets}\n                label=\"Number of special sets\"\n                name=\"numSpecialSets\"\n                value={values.numSpecialSets}\n                onInput={handleInputChange}\n            /> */}\n        </FormPages.MiddlePage>\n    );\n};\n\nexport default PageSix;\n","// calebaren.github.io\nimport React from 'react';\n// import { Grid, Typography, Link, ListItemText, List, ListItem } from '@material-ui/core';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useForm } from '../Components/useForm';\nimport Controls from '../Components/Controls/Controls';\n// import ReCAPTCHA from 'react-google-recaptcha';\nimport FormPages from './FormPages';\nimport PagesList from './FormPagesList';\nimport { Link } from 'react-router-dom';\n\nconst initialFieldValues = {\n    step: 1,\n    fullName: '',\n    email: '',\n    numBlendedLearning: 1,\n    maxGrade: 1,\n    numSchedules: 1,\n    numRooms: 1,\n    numDays: 1,\n    numSetsSameDay: 0,\n    numPairsDiffDay: 0,\n    numSpecialSets: 0,\n    specialSets: [],\n    packedSpecialSets: [[]],\n    mainFile: [],\n    roomFile: [],\n    sameFile: [],\n    diffFile: [],\n};\n\nconst DataForm = (): any => {\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleFileAdd,\n        handleFileDelete,\n        handleInputChange,\n        handleSpecialSetChange,\n        handleSliderChange,\n        handlePackedSetsChange,\n        handleGradeChange,\n    } = useForm(initialFieldValues);\n\n    const helpTexts = {\n        numBlendedLearning: 'Please enter a positive, whole number for the number of students participating in blended learning.',\n        numDays: 'Please enter a positive, whole number for the number of schedules (i.e., cohorts).',\n        numRooms: 'Please enter a positive, whole number for the number of classrooms available every day.',\n        maxGrade: 'Please enter the maximum grade in your school as a positive integer.',\n        numSetsSameDay: 'Please enter the number of sets (of, e.g., siblings) the members of each of which need to be scheduled on the same day. Enter 0 if there are none.',\n        numPairsDiffDay: 'Please enter the number of pairs of students that need to be scheduled on different days. Enter 0 if there are none.',\n        numSpecialSets: 'Please enter the number of special sets, 0 if there are none.',\n    };\n\n    // validate for names and emails\n    const validate = () => {\n        // const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n        let temp = {\n            fullName: '',\n            email: '',\n            mainFile: '',\n            roomFile: '',\n            sameFileMissing: '',\n            diffFileMissing: '',\n            numSetsSameDay: '',\n            numPairsDiffDay: '',\n        };\n        // temp.fullName = values.fullName ? '' : 'Your name is required.';\n        // temp.email = re.test(values.email) ? '' : 'Your email is required.';\n        temp.mainFile = values.mainFile[0] ? '' : 'Please upload a file with your students.';\n        temp.roomFile = values.roomFile[0] ? '' : 'Please upload a file with your room capacities.';\n        temp.sameFileMissing = (values.numSetsSameDay > 0 && !values.sameFile[0]) ? 'Please upload a file with sets of students to be scheduled on the same day.' : '';\n        temp.diffFileMissing = (values.numPairsDiffDay > 0 && !values.diffFile[0]) ? 'Please upload a file with pairs of students to be scheduled on different days.' : '';\n\n        console.log(!(Object.values(temp).every(x => x === '')))\n        if (!(Object.values(temp).every(x => x === ''))) {\n            window.alert(Object.values(temp).filter(x => x !== '').join('\\n'));\n        } else {\n            return true;\n        }\n    }\n\n    // proceed to next step\n    const nextStep = () => {\n        const { step } = values;\n        setValues({\n            ...values,\n            step: step + 1,\n        });\n    };\n\n    // go back to previous step\n    const prevStep = () => {\n        const { step } = values;\n        setValues({\n            ...values,\n            step: step - 1,\n        });\n    };\n\n    // const handleCaptcha = (value: any) => {\n    //   console.log(\"captcha value:\", value);\n    // };\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        console.log(values);\n        if (validate()) {\n            nextStep();\n            const postUrl = 'https://lqi0rcs9b1.execute-api.us-east-1.amazonaws.com/prod/';\n            const payload = {\n                fullname: values.fullName,\n                email: values.email,\n                timelimit: 600,\n                num_students: values.numBlendedLearning,\n                num_rooms: values.numRooms,\n                num_days: values.numDays,\n                max_grade: values.maxGrade, // grades go from 0 to maxgrade\n                num_same_day_sets: values.numSetsSameDay,\n                num_diff_day_pairs: values.numPairsDiffDay,\n                num_special_sets: values.numSpecialSets,\n                fraction_for_special_set: values.specialSets,\n                num_rooms_to_be_packed_into: values.packedSpecialSets,\n                diff_file: values.diffFile[1] ? values.diffFile[1] : '',\n                main_file: values.mainFile[1] ? values.mainFile[1] : '',\n                room_file: values.roomFile[1] ? values.roomFile[1] : '',\n                same_file: values.sameFile[1] ? values.sameFile[1] : '',\n            }\n\n\n            console.log(payload);\n\n            const send = true;\n            if (send) {\n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(payload),\n                };\n                fetch(postUrl, requestOptions)\n                    .then(response => console.log(response.json()))\n            }\n        }\n    };\n\n    switch (values.step) {\n        // case 0:\n        //     return (\n        //         <>\n        //             <Typography variant=\"h6\" gutterBottom={true}>Getting Started</Typography>\n        //             <Typography variant=\"body1\" paragraph>\n        //                 Thanks for using Schedyool!\n        //             </Typography>\n        //             <Typography variant=\"body2\" paragraph>\n        //                 This tool was designed to make scheduling for hybrid classrooms a breeze. \n        //                 To get started, please have ready:\n        //             </Typography>\n        //             <List>\n        //                 <ListItem>\n        //                     <ListItemText>\n        //                         <code>.csv</code> files with information on your students. Sample files are available here *insert link*.\n        //                     </ListItemText>\n        //                 </ListItem>\n        //                 <ListItem>\n        //                     <ListItemText>\n        //                         Stuff 2\n        //                     </ListItemText>\n        //                 </ListItem>\n        //             </List>\n        //             <Controls.Button onClick={nextStep} text=\"Schedyool!\" />\n        //         </>\n\n        //     )\n        case 1:\n            return (\n                <PagesList.PageOne\n                    nextStep={nextStep}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                />\n            );\n        case 2:\n            return (\n                <PagesList.PageTwo\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    handleGradeChange={handleGradeChange}\n                    values={values}\n                />\n            );\n        case 3:\n            return (\n                <PagesList.PageThree\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                />\n            );\n        case 4:\n            return (\n                <PagesList.PageFour\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    handleSpecialSetChange={handleSpecialSetChange}\n                    values={values}\n                />\n            );\n        // Sliders for special sets\n        case 5:\n            return (\n                <PagesList.PageFive\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleSliderChange={handleSliderChange}\n                    values={values}\n                />\n            );\n        // Packing special sets\n        case 6:\n            return (\n                <PagesList.PageSix\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handlePackedSetsChange={handlePackedSetsChange}\n                    values={values}\n                />\n            );\n        // Dropzone for files\n        case 7:\n            return (\n                <FormPages.MiddlePage\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                >\n                    <Typography\n                        variant=\"h6\"\n                        align='left'\n                        gutterBottom={true}\n                    >\n                        Upload your files.\n                    </Typography>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Controls.Dropzone\n                                handleFileAdd={handleFileAdd}\n                                handleFileDelete={handleFileDelete}\n                                values={values}\n                                name=\"mainFile\"\n                                text=\"Main file\"\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Dropzone\n                                handleFileAdd={handleFileAdd}\n                                handleFileDelete={handleFileDelete}\n                                values={values}\n                                name=\"roomFile\"\n                                text=\"Room-capacity file\"\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Dropzone\n                                handleFileAdd={handleFileAdd}\n                                handleFileDelete={handleFileDelete}\n                                values={values}\n                                name=\"sameFile\"\n                                text=\"Same-day-sets file\"\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Controls.Dropzone\n                                handleFileAdd={handleFileAdd}\n                                handleFileDelete={handleFileDelete}\n                                values={values}\n                                name=\"diffFile\"\n                                text=\"Different-day-pairs file\"\n                            />\n                        </Grid>\n                    </Grid>\n                </FormPages.MiddlePage>\n            )\n        case 8:\n            return (\n                <FormPages.SubmitPage\n                    handleSubmit={handleSubmit}\n                    // nextStep={nextStep}\n                    prevStep={prevStep}\n                    values={values}\n                >\n                    <Typography variant=\"h6\">Confirmation</Typography>\n                </FormPages.SubmitPage>\n            );\n        case 9:\n            return (\n                <div>\n                    <Typography variant=\"h6\" gutterBottom={true}>Confirmation</Typography>\n                    <Typography paragraph>\n                        Your output will be sent within 15 minutes. Please check your email in approximately 15 minutes for your schedules.\n                    </Typography>\n                    <Controls.Button onClick={() => setValues(initialFieldValues)} text=\"Create another schedule\" />\n                    <Link to=\"/\">\n                        <Controls.Button text=\"Home\" color=\"default\" />\n                    </Link>\n                </div>\n\n            )\n    }\n};\n\n\nexport default DataForm;\n","// calebaren.github.io\nimport React from 'react';\nimport DataForm from './DataForm';\nimport Page from './Page';\n\n\nconst Scheduler = (): any => {\n    return (\n        <Page title=\"Schedyool\" subtitle=\"Create schedules for your students\">\n            <DataForm />\n        </Page>\n    );\n};\n\nexport default Scheduler;","import React from 'react';\nimport './download.css';\n\nclass DownloadFile extends React.Component {\n\t\n  downloadData = () => {\n    var element = document.createElement('a'); \n    fetch('https://www.schedyool.com/blank_students_with_names.xlsm', {mode : \"no-cors\"})\n      .then(response => {\n  \t\t\t\tresponse.blob().then(blob => {\n  \t\t\t\t\tlet url = window.URL.createObjectURL(blob);\n  \t\t\t\t\tlet a = document.createElement('a');\n  \t\t\t\t\ta.href = url;\n                                          // This is the name to be presented to the user.\n  \t\t\t\t\ta.download = 'students_with_names.xlsm'; \n  \t\t\t\t\ta.click();\n  \t\t\t\t});\n  \t\t\t\t// window.location.href = response.url;\n                           })\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <button onClick={this.downloadData}>Download file(s)</button>\n      </div>\n    )\n  }\n\n}\n\nexport default DownloadFile;\n","// calebaren.github.io\nimport React from 'react';\nimport Page from './Page';\n// import { Typography, Link, List, ListItem, ListItemText } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport Controls from '../Components/Controls/Controls';\nimport ReactMarkdown from 'react-markdown';\nconst Home = (): any => {\n  const inputString = `Welcome to the Schedyool Free Covid-19 School Scheduling App!\n    Powered by AMPL (TM) algebraic modeling software and Gurobi (TM) optimization software,\n    Schedyool is free school-scheduling software specifically for the scheduling\n    of blended learning during Covid-19.  For help, e-mail help@schedyool.com. \n\n                                How to Use Schedyool\n    \n    Here are detailed instructions.\n    \n    Page 1.  Enter your name and e-mail address.  These are needed only so Schedyool can e-mail you a schedule.\n    You may leave the name field blank if you wish.\n    \n    Page 2. \n    a) (blended students)  \n    Enter the number of students who will participate in blended (also known as \"hybrid\") learning.  \n    These are the students who will physically attend school at least part of the time.  \n    Do not include any \"online only\" students.\n    \n    b) (maximum grade) \n    The code assumes that the minimum grade in your school is 0, which is kindergarten.  (See the\n    work-around below if the minimum grade in your school is not kindergarten.)  Enter here the maximum \n    grade in your school.  For many elementary schools, this will be 5, since they run from kindergarten\n    to grade 5.   \n     \n    If your school's minimum grade level is not 0, say, because it is a middle or high school, you will have \n    to translate your school's minimum grade to 0.  For example, if your school's grade levels are 9-12,\n    subtract 9 from all grades so that the minimum grade becomes 0\n    and the maximum grade becomes 3, and enter 3 as the maximum grade.  You\n    will have to understand that when Schedyool refers to grade 0, it will mean grade 9;  grade 1 will mean grade\n    10;  grade 2 will mean grade 11;  and grade 3 will mean grade 12.\n    \n    c) (number of schedules) \n    Enter the number of schedules you need.\n    If, for example, your students will attend physical school on average half the time, say, they are attending on \n    Monday-Tuesday and alternate Wednesdays or Thursday-Friday and alternate Wednesdays, enter 2.  If they are attending school one \n    third of the time, enter 3.  If they are attending one day per week, enter 5.\n    \n    d) (number of classrooms) \n    This is the number of classrooms available for instruction every day.\n    \n    Page 3: \n    a) (number of same-day sets) \n    You are likely to have sets of students who want to attend\n    school on the same days, because they are siblings, members of a learning pod, or for some\n    other reason.  Enter the number of such sets here.  The sets must have size at least two, but may\n    have size three or more.\n    \n    b) (number of different-day sets) \n    You may have pairs of students who, for some reason,\n    want to be scheduled on different days.  These must indeed be pairs (i.e., of size precisely two).  \n    Enter the number of such pairs here.\n    \n    Page 3 (special sets)  \n    The code allows you to enter sets of students who need special treatment, such\n    as ICT or ENL students.  Enter here the number of special sets.\n    \n    Page 4 (special set fractions)  \n    Students in a special set may not be allowed to encompass more than\n    a certain fraction of all the students in a classroom.  For example, ICT students by law may encompass\n    at most 40% of the students in a classroom.  There is one slider for each special set.\n    Use the slider for a special set to enter the fraction for that special set.  For ICT students, \n    for example, adjust the slider to 40%.  For ENL students, there is no such requirement, \n    so leave the slider at 100%.\n    \n    Page 5 (packing special sets)\n    For each special set, you may have a limitation, because of staffing issues, on the number of classrooms\n    into which the students in each grade in that set may appear.  For example, suppose you want to pack:\n    \n      the kindergarten ICT students into 1 room each day;\n      the first-grade ICT students into 2 rooms each day;\n      the second-grade ICT students into 1 room each day;\n      the third-grade ICT students into 3 rooms each day;\n      the fourth-grade ICT students into 1 room each day; and\n      the fifth-grade ICT students into 2 rooms each day.\n    \n    Then for the ICT special set, you would enter the numbers 1 2 1 3 1 2, in order.\n    \n    If there is no packing limitation for a grade, enter \"None\".\n    \n    Page 5 (file upload).  \n    On this page, you need to upload the student file, the room-capacity file, the same-day-sets\n    file, and the different-day-pairs files, IN THAT ORDER.  Here are descriptions of the files.\n    \n    While the description below mentions Excel, you could also create the files\n    via Notepad or Wordpad.\n    \n                                       THE STUDENT FILE\n    \n    The most complicated file, the student file has EXACTLY one line per student;  there is no header row.  \n    \n    Later on, Schedyool can help you generate the file of sets of students who must be scheduled\n    on the same day (that is, in the same cohort).  If you want Schedyool to help, you must download file\n    students_with_names.xlsm, a macro-enabled Excel workbook, from the Schedyool website.  \n    This file is empty except for the macro.  If you do not, you can build students_with_names.xlsx \n    without help from a macro.  In this latter case, the file is a regular Excel spreadsheet, \n    not a macro-enabled one.  Anyone who is reluctant to download macro-enabled spreadsheets \n    should choose the latter option, but will then have to generate the same-day-sets file manually.\n    \n    In either case, here is how to complete the students_with_names file.\n    Start with the downloaded students_with_names.xlsm or your own students_with_names.xlsx.\n    Suppose in your school exactly 600 students will participate in blended learning.  Using Excel,\n    create a file containing 600 rows.\n    \n    Column 1 (column A in Excel).  Leave blank for now.\n    \n    Columns 2 and 3 (B and C in Excel).  In columns 2 and 3, place the names of the students,\n    the last name in column 2 and the first name in column 3.  These columns will not go to Schedyool.  \n    \n    Column 4 (D in Excel):  Place in column 4 the grade level of the student whose name appears in columns 2 \n    and 3.  Use 0 for kindergarten.  These numbers must be between 0 and the maximum grade you entered above.\n      \n    Column 5 (E in Excel).  In column 5, place M for a boy or F for a girl.  The genders are used only to approximately\n    balance the classrooms by gender.\n    \n    Each additional column, if any, corresponds to a special set.  So far, this file has five columns.\n    If there are no special sets, stop.  If there are special sets, add exactly one column per special set.\n    \n    For each special set, in order, put a 1 if the student is in the special set and a 0 otherwise.\n    For example, if there are two special sets and the first student were not in the first one but were in the \n    second, then in the first row, add a 0 in column 6 (F in Excel) and a 1 in column 7 (G in Excel).\n    It might be easier to first fill the two columns with zeros and then manually change some of the zeros to\n    ones.\n    \n    The total number of columns should be five plus the number of special sets.\n    \n    Now sort the sheet on column B, the last names.  You will get a warning asking if you want \n    to expand the selection;  say \"yes\" or \"OK\".  Note:  You do not have to sort the sheet\n    if you are not using the macro.\n    \n    After sorting (or not sorting) the rows by last name, insert line numbers in the first column, \n    that is, put a 1 on row 1, a 2 on row 2, 3 on row 3, etc.  We recommend using method 1, \n    \"Using Fill Handle,\" from website trumpexcel.com/number-rows-in-excel.  It's easy.\n    \n    Save the workbook as an Excel spreadsheet named students_with_names, either as a macro-enabled workbook \n    (with a .xlsm extension) or a regular Excel spreadsheet (with a .xlsx extension).  \n    \n    Now, in Excel, copy all the columns EXCEPT FOR THE FIRST THREE to a new sheet.\n    Save the sheet as type \"CSV (Comma Delimited)\" with name \"students_without_names\"\n    (without the quotation marks).  You will get a warning saying \"The selected\n    file type does not support workbooks that contain multiple sheets.\"  That's exactly \n    what you want.  Click \"OK\".  Then you will get a warning about losing features, and \"Do you want to \n    keep that format?\"  Click Yes.  The file will be \n    stored with a \".csv\" extension.  It is that file, students_without_names.csv, that you will\n    upload first to Schedyool.\n    \n    EXAMPLE.\n    \n    Suppose there are exactly 10 students participating in blended learning in your school \n    and you have two special sets.  Before sorting and adding line numbers, your students_with_names \n    file will have 7 columns, the first being blank, and may look like this:\n    \n     \tSmith\tJohn\t4\tM\t0\t1\n     \tJones\tMary\t5\tF\t0\t0\n     \tWilliam\tLetitia\t4\tF\t1\t1\n     \tFriend\tBill\t0\tM\t0\t0\n     \tAslam\tAmir\t2\tM\t0\t0\n     \tSmith\tKareem\t3\tM\t0\t0\n     \tTalwar\tMoh\t1\tM\t1\t0\n     \tHalvah\tCindy\t1\tF\t1\t0\n     \tChan\tCarla\t2\tF\t0\t0\n      Chopra\tSunil\t5\tM\t0\t1\n    \n    After sorting by last name and adding line numbers, it might look like this:\n    \n    1\tAslam\tAmir\t2\tM\t0\t0\n    2\tChan\tCarla\t2\tF\t0\t0\n    3 Chopra\tSunil\t5\tM\t0\t1\n    4\tFriend\tBill\t0\tM\t0\t0\n    5\tHalvah\tCindy\t1\tF\t1\t0\n    6\tJones\tMary\t5\tF\t0\t0\n    7\tSmith\tJohn\t4\tM\t0\t1\n    8\tSmith\tKareem\t3\tM\t0\t0\n    9\tTalwar\tMoh\t1\tM\t1\t0\n    10\tWilliam\tLetitia\t4\tF\t1\t1\n    \n    The corresponding students_without_names.csv file will have 10 rows and look like this:\n    \n    2,M,0,0\n    2,F,0,0\n    5,M,0,1 \n    0,M,0,0\n    1,F,1,0\n    5,F,0,0\n    4,M,0,1\n    3,M,0,0\n    1,M,1,0\n    4,F,1,1\n    \n    From this file, Schedyool knows that there are two special sets.  Assuming the first \n    is ICT and the second is ENL, Schedyool knows that:\n    \n    The first student is in second grade, is a boy, is not in ICT or ENL.\n    The second is in second grade and is a girl in neither ICT nor ENL\n    The third, in fifth grade, is a boy who is in both ENL but not ICT.\n    \n                             THE ROOM CAPACITY FILE\n    \n    This file is much simpler.  Open a new sheet of the workbook.  In that sheet, use only the \n    first three columns of each row.  Each row will correspond to a classroom available every\n    day for blended learning.\n    \n    The first column (column A) will contain line numbers, as above.  \n    In the second column (column B), place the name of the classroom, like \"Room 128\", and in the third\n    (column C), place its \"socially-distanced\" student capacity, like 10.  (Remember to deduct for \n    teachers.)  There must be exactly one row for each \n    classroom and no header row.  Call that sheet \"room_capacities_with_names\".\n    \n    Then copy only the *third* column of that sheet to a new sheet.\n    Then save the last sheet alone as a CSV file, as you did above, ignoring the \n    warnings from Excel.  Call that CSV file something like \"room_capacities_without_names\", to which \n    a \".csv\" extension will be added.  This is the room capacity file you will upload to Schedyool.\n    \n    EXAMPLE.\n    \n    Here is a sample 7-line room_capacities_without_names.csv file, for a school with 7 classrooms.\n    \n    10\n    8\n    12\n    12\n    11\n    7\n    9\n    \n    There are two more files to upload.\n    \n                             THE SAME-DAY SETS FILE\n    \n    You can read below how Schedyool's Excel macro can help you build this file.\n    WARNING:  If you are going to use the Excel macro, you must do so FIRST.\n    \n    Use Wordpad or Notepad to create this file, not Excel!\n\n    You likely have some sets of students who want to be scheduled on the same day.  Perhaps\n    some of your sets are sets of siblings and some are \"learning pods.\"  You will now create a file \n    containing one line for each such set.  In this file, we represent a student\n    by the number of the row in which the student appears in the students_with_names file.\n    For example, look at the sample students_with_names file above.  \n    If Letitia William, Moh Talwar, and Carla Chan are in a learning pod together and \n    desire to be scheduled on the same day, add row\n    \n    10,9,2\n    \n    Should Sunil Chopra and Bill Friend be friends who want to be \n    scheduled on the same row, add row\n    \n    3,4\n    \n    Now save this file using Wordpad or Notepad into \"same_day_sets.csv\".\n    In CSV format, the file will have two lines and will look like this:\n    \n    10,9,2\n    3,4\n    \n            HOW SCHEDYOOL CAN HELP GENERATING THE SAME-DAY-SETS FILE\n    \n    As a starting point, Schedyool can assume that all children with the same \n    last name should be scheduled on the same day (i.e., in the same cohort).  Of course \n    (1) children with the same last name need not be siblings;  (2) siblings may not have asked \n    to be scheduled on the same day; and (3) siblings need not have the same last name.  \n    Nonetheless, Schedyool's file may be a good starting point.  The principal would need, at minimum, to add \n    to the Schedyool-generated file rows for learning pods.  For the example above, Schedyool \n    would generate a file with only the line\n    \n    7,8\n    \n    because only John Smith, student 7, and Kareem Smith, student 8, have the same last name.\n    \n    Here we describe how Schedyool can generate the same-day-sets file for sets of children\n    having the same last name.  You must have downloaded the file students_with_names.xlsm \n    from the Schedyool website.  Carefully follow the directions above for generating the student file,\n    which must be placed in the \"student_file\" sheet in the students_with_names.xlsm spreadsheet.\n    Excel will ask you if you want to enable macros;  say \"yes\" or \"OK\".\n    \n    Now click on the button on row 1 near column N labeled \"Generate Same-Day Sets\".  If things work, you\n    will see \"Done.\"  In this case, the same-day sets file for kids with the same last name appears \n    on the sheet labeled \"same_day_sets\", which you will have to save in CSV.  Once you have file\n    \"same_day_sets.csv\" generated with the help of the macro, you can modify it, as described above,\n    using Wordpad or Notepad.  In this example, the final file would be\n\n    7,8\n    10,9,2\n    3,4\n\n    with the \"7,8\" added by the macro and the other two lines added by you manually.\n\n    \n                            THE DIFFERENT DAY PAIRS FILE                              \n    \n    Last, you must upload a different-day-pairs file, for pairs of students who want to be\n    scheduled on different days.  Use Wordpad or Notepad to generate this file.\n    This file looks a lot like the same-day-sets file, except that\n    it has exactly two numbers per row.  You simply place on each row the row numbers of a pair\n    of students who want to be scheduled on different days.  For example, if Cindy Halvah and \n    Moh Talwar are such a pair, add row\n    \n    5,9\n    \n    using Wordpad or Notepad.  If John Smith and Sunil Chopra are another such pair, add row\n    \n    7,3\n    \n    Save as CSV into something like \"different_day_pairs.csv\".  In this example, the 2-line file to be\n    uploaded would be \n    \n    5,9\n    7,3\n    \n                               SUBMITTING YOUR DATA\n    \n    After reviewing your data on the Review page, click Submit.  The code will need up to 15 minutes.  \n    At completion, it will send you an e-mail.  The e-mail will contain the schedule, \n    presuming (as is usually the case) it found \n    one.  If it failed to find one, there was probably a mistake in your data, either in the \n    quantities you entered by hand or in the files you uploaded.  In most but not all cases, \n    Schedyool will describe the error, but in some cases you will have to examine the data you entered\n    and find the error yourself.  In rare cases, Schedyool might even fail to find a schedule, if, for \n    example, there is no feasible schedule, even when there is no error in the data.\n    \n                              HOW TO INTERPRET THE E-MAIL\n    \n    If Schedyool found a schedule, it will appear as the CSV attachment \"schedule.csv\" to the e-mail. \n    This attachment corresponds to the textual output which appears in the body of the e-mail.  File\n    schedule.csv will have four columns.  The first is the student number, from students_with_names;\n    the second is that student's grade level;  the third is the day on which the student will attend\n    school (that is, the cohort;  more about this in a moment); and the last is the classroom number.\n    \n    The \"day\" is really the \"cohort.\"  For example, for Monday-Tuesday and alternate Wednesdays \n    vs Thursday-Friday and alternate Wednesdays, \"day 1\" means the former and \"day 2\" means the latter.\n    \n    Open up schedule.csv by double clicking on it.  Add three new columns at the front.  Also open \n    schedule_with_names and copy the first three columns of schedule_with_names \n    into the three blank columns of schedule.csv.  Now you have the schedule with the names of the students.  \n  `;\n\n  return (\n    <Page title=\"Instructions\" subtitle=\"Instructions for using Schedyool\">\n      <Link to=\"/\"> <Controls.Button text=\"Home\" /> </Link>\n      <Link to=\"/downloadfile\"> <Controls.Button text=\"Download File(s)\" /> </Link>\n      <Link to=\"/scheduler\"> <Controls.Button text=\"Schedyool!\" /> </Link>\n      <ReactMarkdown source={inputString} />\n    </Page>\n  )\n\n};\n\n\nexport default Home;\n","// @@@@@@@@ This file *is* being read and used.\n// calebaren.github.io\nimport React from 'react';\nimport './App.css';\nimport 'fontsource-roboto';\nimport Header from '../Components/Header';\nimport { CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Home from '../Pages/Home';\nimport Scheduler from '../Pages/Scheduler';\nimport DownloadFile from '../Pages/DownloadFile'; \nimport Instructions from '../Pages/Instructions'; \nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126',\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526',\n    },\n    background: {\n      default: \"#f4f5fd\",\n    }\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: `translateZ(0)`,\n      },\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n          <Header title=\"Schedyool\">\n            <Switch>\n              <Route path=\"/scheduler\"> <Scheduler /> </Route>\n              <Route path=\"/instructions\"> <Instructions /> </Route>\n              <Route path=\"/downloadfile\"> <DownloadFile /> </Route>\n              <Route path=\"/\"> <Home /> </Route>\n            </Switch>\n          </Header>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\n// const onChange = (value: any): void => {\n//   console.log(\"Captcha value:\", value)\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <ReCAPTCHA \n       sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\"\n       onChange={onChange}\n     /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}