{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/useForm.tsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nexport const useForm = initialFieldValues => {\n  const [values, setValues] = useState(initialFieldValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (parseInt(value)) {\n      if (parseInt(value) >= 0) {\n        setValues({ ...values,\n          [name]: parseInt(value)\n        });\n      }\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n  };\n\n  const handleFileAdd = file => {\n    setValues({ ...values,\n      files: values.files.concat(file)\n    });\n  };\n\n  const handleFileDelete = file => {\n    const allFiles = [...values.files];\n    allFiles.splice(file, 1);\n    setValues({ ...values,\n      files: allFiles\n    });\n  };\n\n  const handleSpecialSetChange = e => {\n    // // if new special set is greater, then append 1s.\n    const {\n      name,\n      value\n    } = e.target;\n    let newSpecialSets = 0;\n\n    if (parseInt(value)) {\n      if (parseInt(value) >= 0) {\n        newSpecialSets = parseInt(value); // setValues({\n        //     ...values,\n        //     [name]: parseInt(value)\n        // })\n      }\n    } else {// setValues({\n        //     ...values,\n        //     [name]: value\n        // })\n      }\n\n    if (newSpecialSets > values.specialSets.length) {\n      setValues({ ...values,\n        numSpecialSets: newSpecialSets,\n        specialSets: values.specialSets.concat(Array.from(Array(newSpecialSets - values.numSpecialSets), () => 1))\n      });\n    } else {\n      setValues({ ...values,\n        numSpecialSets: newSpecialSets,\n        specialSets: values.specialSets.slice(0, newSpecialSets)\n      });\n    } // if (newSpecialSets > values.specialSets.length) {\n    //     setValues({\n    //         ...values,\n    //         numSpecialSets: newSpecialSets,\n    //         specialSets: values.specialSets.concat(\n    //             Array.from(Array(newSpecialSets-values.numSpecialSets), () => 1)\n    //         )\n    //     });\n    // } \n    // // if new special set value is lesser, then slice.\n    // else {\n    //     setValues({\n    //         ...values,\n    //         numSpecialSets: newSpecialSets,\n    //         specialSets: values.specialSets.slice(0, newSpecialSets)\n    //     })\n    // }\n\n  };\n\n  return {\n    values,\n    setValues,\n    handleFileAdd,\n    handleFileDelete,\n    errors,\n    setErrors,\n    handleInputChange,\n    handleSpecialSetChange\n  };\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '90%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport const Form = props => {\n  const classes = useStyles();\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    className: classes.root,\n    autoComplete: \"off\"\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), children);\n};","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/useForm.tsx"],"names":["React","useState","makeStyles","useForm","initialFieldValues","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","parseInt","handleFileAdd","file","files","concat","handleFileDelete","allFiles","splice","handleSpecialSetChange","newSpecialSets","specialSets","length","numSpecialSets","Array","from","slice","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nexport const useForm = (initialFieldValues: any) => {\n    const [values, setValues] = useState(initialFieldValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = (e: any) => {\n        const { name, value } = e.target;\n        if ( parseInt(value) ) {\n            if ( parseInt(value) >= 0) {\n                setValues({\n                    ...values,\n                    [name]: parseInt(value)\n                })\n            }\n        } else {\n            setValues({\n                ...values,\n                [name]: value\n            })\n        }\n    };\n\n    const handleFileAdd = (file: any) => {\n        setValues({\n            ...values,\n            files: values.files.concat(file)\n        });\n    };\n\n    const handleFileDelete = (file: any) => {\n        const allFiles = [...values.files];\n        allFiles.splice(file, 1);\n        setValues({\n            ...values,\n            files: allFiles,\n        });\n    };\n\n    const handleSpecialSetChange = (e: any) => {\n        // // if new special set is greater, then append 1s.\n        const { name, value } = e.target;\n        let newSpecialSets = 0;\n        if ( parseInt(value) ) {\n            if ( parseInt(value) >= 0) {\n                newSpecialSets = parseInt(value);\n                // setValues({\n                //     ...values,\n                //     [name]: parseInt(value)\n                // })\n            }\n        } else {\n            \n            // setValues({\n            //     ...values,\n            //     [name]: value\n            // })\n        }\n        if (newSpecialSets > values.specialSets.length) {\n            setValues({\n                ...values,\n                numSpecialSets: newSpecialSets,\n                specialSets: values.specialSets.concat(\n                    Array.from(Array(newSpecialSets-values.numSpecialSets), () => 1)\n                ),\n            })\n        } else {\n            setValues({\n                ...values,\n                numSpecialSets: newSpecialSets,\n                specialSets: values.specialSets.slice(0, newSpecialSets),\n            })\n        }\n        // if (newSpecialSets > values.specialSets.length) {\n        //     setValues({\n        //         ...values,\n        //         numSpecialSets: newSpecialSets,\n        //         specialSets: values.specialSets.concat(\n        //             Array.from(Array(newSpecialSets-values.numSpecialSets), () => 1)\n        //         )\n        //     });\n        // } \n        // // if new special set value is lesser, then slice.\n        // else {\n        //     setValues({\n        //         ...values,\n        //         numSpecialSets: newSpecialSets,\n        //         specialSets: values.specialSets.slice(0, newSpecialSets)\n        //     })\n        // }\n        \n    }\n\n    return {\n        values, \n        setValues, \n        handleFileAdd,\n        handleFileDelete,\n        errors,\n        setErrors,\n        handleInputChange,\n        handleSpecialSetChange\n    };\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '90%',\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport const Form = (props: any) => {\n    const classes = useStyles();\n    const { children, ...other } = props;\n\n    return (\n        <form \n            className={classes.root} \n            autoComplete=\"off\"\n            {...other}\n        >\n            {children}\n        </form>\n    );\n};"]},"metadata":{},"sourceType":"module"}