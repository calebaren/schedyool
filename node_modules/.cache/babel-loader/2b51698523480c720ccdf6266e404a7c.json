{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx\";\nimport React from 'react';\nimport { TextField, InputAdornment, Tooltip, Grid, withStyles, Typography } from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.background.paper,\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9'\n  }\n}))(Tooltip);\n\nconst Input = props => {\n  const {\n    variant,\n    label,\n    type,\n    name,\n    value,\n    error = null,\n    onInput,\n    helpText,\n    icon,\n    breakpoint,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: breakpoint || 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(HtmlTooltip, {\n        title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n          color: \"inherit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }\n        }, \"Tooltip with HTML\"), \"it's very engaging, right?\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, icon || /*#__PURE__*/React.createElement(HelpOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 38\n        }\n      })))\n    },\n    variant: variant || \"outlined\",\n    type: type || \"number\",\n    label: label,\n    name: name,\n    value: value,\n    onInput: onInput\n  }, error && {\n    error: true,\n    helperText: error\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx"],"names":["React","TextField","InputAdornment","Tooltip","Grid","withStyles","Typography","HelpOutlineIcon","HtmlTooltip","theme","tooltip","backgroundColor","palette","background","paper","color","maxWidth","fontSize","typography","pxToRem","border","Input","props","variant","label","type","name","value","error","onInput","helpText","icon","breakpoint","other","startAdornment","helperText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,OAApC,EAA6CC,IAA7C,EAAmDC,UAAnD,EAAsEC,UAAtE,QAAwF,mBAAxF;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,MAAMC,WAAW,GAAGH,UAAU,CAAEI,KAAD,KAAmB;AAC9CC,EAAAA,OAAO,EAAE;AACLC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,KADrC;AAELC,IAAAA,KAAK,EAAE,qBAFF;AAGLC,IAAAA,QAAQ,EAAE,GAHL;AAILC,IAAAA,QAAQ,EAAER,KAAK,CAACS,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CAJL;AAKLC,IAAAA,MAAM,EAAE;AALH;AADqC,CAAnB,CAAD,CAAV,CAQhBjB,OARgB,CAApB;;AAUA,MAAMkB,KAAK,GAAIC,KAAD,IAA6B;AACvC,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,IAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA,KALE;AAMFC,IAAAA,KAAK,GAAC,IANJ;AAOFC,IAAAA,OAPE;AAQFC,IAAAA,QARE;AASFC,IAAAA,IATE;AAUFC,IAAAA,UAVE;AAWF,OAAGC;AAXD,MAYFX,KAZJ;AAaA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAEU,UAAU,IAAI,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,UAAU,EAAE;AACRE,MAAAA,cAAc,eACd,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,WAAD;AACI,QAAA,KAAK,eACD,uDACI,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAIK,4BAJL,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUKH,IAAI,iBAAI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVb,CAJJ;AAFQ,KADhB;AAsBI,IAAA,OAAO,EAAER,OAAO,IAAI,UAtBxB;AAuBI,IAAA,IAAI,EAAEE,IAAI,IAAI,QAvBlB;AAwBI,IAAA,KAAK,EAAED,KAxBX;AAyBI,IAAA,IAAI,EAAEE,IAzBV;AA0BI,IAAA,KAAK,EAAEC,KA1BX;AA2BI,IAAA,OAAO,EAAEE;AA3Bb,KA4BSD,KAAK,IAAI;AAACA,IAAAA,KAAK,EAAE,IAAR;AAAcO,IAAAA,UAAU,EAAEP;AAA1B,GA5BlB,EA6BQK,KA7BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAmCH,CAjDD;;AAmDA,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport { TextField, InputAdornment, Tooltip, Grid, withStyles, Theme, Typography } from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.background.paper,\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n    }, \n}))(Tooltip);\n  \nconst Input = (props: any): JSX.Element => {\n    const { \n        variant, \n        label, \n        type, \n        name, \n        value, \n        error=null, \n        onInput, \n        helpText,\n        icon,\n        breakpoint,\n        ...other\n    } = props;\n    return (\n        <Grid item xs={breakpoint || 6}>\n            <TextField\n                InputProps={{\n                    startAdornment: (\n                    <InputAdornment position=\"start\">\n                        {/* <Tooltip title={helpText} arrow interactive>\n                            {icon || <HelpOutlineIcon />}\n                        </Tooltip> */}\n                        <HtmlTooltip\n                            title={\n                                <>\n                                    <Typography color=\"inherit\">\n                                        Tooltip with HTML\n                                    </Typography>\n                                    {\"it's very engaging, right?\"}\n                                </>\n                            }\n                        >\n                            {icon || <HelpOutlineIcon />}\n                        </HtmlTooltip>\n                    </InputAdornment>\n                    ),\n                }}\n                variant={variant || \"outlined\"}\n                type={type || \"number\"}\n                label={label}\n                name={name}\n                value={value}\n                onInput={onInput}\n                {...(error && {error: true, helperText: error})}\n                {...other}\n            />\n        </Grid>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}