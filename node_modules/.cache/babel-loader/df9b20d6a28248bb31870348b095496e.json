{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx\";\nimport React from 'react';\nimport { TextField, InputAdornment, Tooltip, Grid } from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst Input = props => {\n  const {\n    variant,\n    label,\n    type,\n    name,\n    value,\n    error = null,\n    onInput,\n    helpText,\n    icon,\n    breakpoint,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: breakpoint || 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: helpText || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, icon || /*#__PURE__*/React.createElement(HelpOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }\n      })))\n    },\n    variant: variant || \"outlined\",\n    type: type || \"number\",\n    label: label,\n    name: name,\n    value: value,\n    onInput: onInput\n  }, error && {\n    error: true,\n    helperText: error\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx"],"names":["React","TextField","InputAdornment","Tooltip","Grid","HelpOutlineIcon","Input","props","variant","label","type","name","value","error","onInput","helpText","icon","breakpoint","other","startAdornment","helperText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,OAApC,EAA6CC,IAA7C,QAAyD,mBAAzD;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAA6B;AACvC,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,IAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA,KALE;AAMFC,IAAAA,KAAK,GAAC,IANJ;AAOFC,IAAAA,OAPE;AAQFC,IAAAA,QARE;AASFC,IAAAA,IATE;AAUFC,IAAAA,UAVE;AAWF,OAAGC;AAXD,MAYFX,KAZJ;AAaA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAEU,UAAU,IAAI,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,UAAU,EAAE;AACRE,MAAAA,cAAc,eACd,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEJ,QAAQ,IAAI,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,IAAI,iBAAI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb,CADJ;AAFQ,KADhB;AAUI,IAAA,OAAO,EAAER,OAAO,IAAI,UAVxB;AAWI,IAAA,IAAI,EAAEE,IAAI,IAAI,QAXlB;AAYI,IAAA,KAAK,EAAED,KAZX;AAaI,IAAA,IAAI,EAAEE,IAbV;AAcI,IAAA,KAAK,EAAEC,KAdX;AAeI,IAAA,OAAO,EAAEE;AAfb,KAgBSD,KAAK,IAAI;AAACA,IAAAA,KAAK,EAAE,IAAR;AAAcO,IAAAA,UAAU,EAAEP;AAA1B,GAhBlB,EAiBQK,KAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAuBH,CArCD;;AAuCA,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport { TextField, InputAdornment, Tooltip, Grid } from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst Input = (props: any): JSX.Element => {\n    const { \n        variant, \n        label, \n        type, \n        name, \n        value, \n        error=null, \n        onInput, \n        helpText,\n        icon,\n        breakpoint,\n        ...other\n    } = props;\n    return (\n        <Grid item xs={breakpoint || 6}>\n            <TextField\n                InputProps={{\n                    startAdornment: (\n                    <InputAdornment position=\"start\">\n                        <Tooltip title={helpText || ''}>\n                            {icon || <HelpOutlineIcon />}\n                        </Tooltip>\n                    </InputAdornment>\n                    ),\n                }}\n                variant={variant || \"outlined\"}\n                type={type || \"number\"}\n                label={label}\n                name={name}\n                value={value}\n                onInput={onInput}\n                {...(error && {error: true, helperText: error})}\n                {...other}\n            />\n        </Grid>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}