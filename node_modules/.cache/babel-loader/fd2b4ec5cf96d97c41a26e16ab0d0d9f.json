{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx\";\nimport React from 'react';\nimport { Grid, InputAdornment } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\nconst initialFieldValues = {\n  fullName: '',\n  email: '',\n  numBlendedLearning: 0,\n  numSchedules: 0,\n  numRooms: 1,\n  numSetsSameDay: 0,\n  numPairsDiffDay: 0,\n  numSpecialSets: 0\n};\n\nconst DataForm = () => {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(initialFieldValues);\n\n  const validate = () => {\n    let temp = {\n      fullName: '',\n      email: ''\n    };\n    temp.fullName = values.fullName ? '' : 'Your name is required.';\n    temp.email = /$|.+@.+..+/.test(values.email) ? '' : 'Your email is required.';\n    setErrors({ ...temp\n    });\n  }; // useEffect(() => console.log(initialFieldValues), []);\n\n\n  const handleCaptcha = value => {\n    console.log(\"captcha value:\", value);\n  };\n\n  const handleSubmit = () => {\n    console.log('clicked');\n    window.alert('testing...');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }))\n    },\n    required: true,\n    type: \"text\",\n    label: \"Full Name\",\n    name: \"fullName\",\n    value: values.fullName,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Blended Learning\",\n    name: \"numBlendedLearning\",\n    value: values.numBlendedLearning,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Number of Schedules\",\n    name: \"numSchedules\",\n    value: values.numSchedules,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Number of Rooms\",\n    name: \"numRooms\",\n    value: values.numRooms,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }))\n    },\n    required: true,\n    type: \"text\",\n    label: \"Email\",\n    name: \"email\",\n    value: values.email,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Number of sets on the same day\",\n    name: \"numSetsSameDay\",\n    value: values.numSetsSameDay,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Number of pairs on different days\",\n    name: \"numPairsDiffDay\",\n    value: values.numPairsDiffDay,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Number of special sets\",\n    name: \"numSpecialSets\",\n    value: values.numSpecialSets,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Dropzone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Button, {\n    type: \"submit\",\n    text: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Reset\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }))));\n};\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\n\n\nexport default DataForm;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx"],"names":["React","Grid","InputAdornment","useForm","Form","AccountCircle","EmailIcon","Controls","initialFieldValues","fullName","email","numBlendedLearning","numSchedules","numRooms","numSetsSameDay","numPairsDiffDay","numSpecialSets","DataForm","values","setValues","errors","setErrors","handleInputChange","validate","temp","test","handleCaptcha","value","console","log","handleSubmit","window","alert","startAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, InputAdornment } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nconst initialFieldValues = {\n    fullName: '',\n    email: '',\n    numBlendedLearning: 0,\n    numSchedules: 0,\n    numRooms: 1,\n    numSetsSameDay: 0,\n    numPairsDiffDay: 0,\n    numSpecialSets: 0,\n};\n\nconst DataForm = (): any => {\n    const { values, setValues, errors, setErrors, handleInputChange} = useForm(initialFieldValues);\n    const validate = () => {\n        let temp = {\n            fullName: '',\n            email: '',\n        };\n        temp.fullName = values.fullName ? '' : 'Your name is required.';\n        temp.email = (/$|.+@.+..+/).test(values.email) ? '' : 'Your email is required.';\n        setErrors({\n            ...temp\n        });\n    }\n    // useEffect(() => console.log(initialFieldValues), []);\n\n    const handleCaptcha = (value: any) => {\n        console.log(\"captcha value:\", value);\n    };\n\n    const handleSubmit = () => {\n        console.log('clicked');\n        window.alert('testing...');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input \n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <AccountCircle />\n                            </InputAdornment>\n                            ),\n                        }}\n                        required\n                        type=\"text\"\n                        label=\"Full Name\"\n                        name=\"fullName\"\n                        value={values.fullName}\n                        onInput={handleInputChange}\n                    />\n                    <Controls.Input \n                        label=\"Blended Learning\"\n                        name=\"numBlendedLearning\"\n                        value={values.numBlendedLearning}\n                        onInput={handleInputChange}\n                    />\n                    <Controls.Input\n                        label=\"Number of Schedules\"\n                        name=\"numSchedules\"\n                        value={values.numSchedules}\n                        onInput={handleInputChange}\n                    />\n                    <Controls.Input\n                        label=\"Number of Rooms\"\n                        name=\"numRooms\"\n                        value={values.numRooms}\n                        onInput={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input \n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <EmailIcon />\n                            </InputAdornment>\n                            ),\n                        }}\n                        required\n                        type=\"text\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onInput={handleInputChange}\n                    />\n                    <Controls.Input\n                        label=\"Number of sets on the same day\"\n                        name=\"numSetsSameDay\"\n                        value={values.numSetsSameDay}\n                        onInput={handleInputChange}\n                    />\n                    <Controls.Input\n                        label=\"Number of pairs on different days\"\n                        name=\"numPairsDiffDay\"\n                        value={values.numPairsDiffDay}\n                        onInput={handleInputChange}\n                    />\n                    <Controls.Input\n                        label=\"Number of special sets\"\n                        name=\"numSpecialSets\"\n                        value={values.numSpecialSets}\n                        onInput={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Controls.Dropzone />\n                </Grid>\n                <Grid item xs={12}>\n                    {/* <ReCAPTCHA sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\" onChange={handleCaptcha} /> */}\n                </Grid>\n                <Grid item xs={12}>\n                    <Controls.Button type=\"submit\" text=\"Submit\" />\n                    <Controls.Button text=\"Reset\" color=\"default\" />\n                </Grid>\n            </Grid>\n        </Form>\n    )\n};\n\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\nexport default DataForm;"]},"metadata":{},"sourceType":"module"}