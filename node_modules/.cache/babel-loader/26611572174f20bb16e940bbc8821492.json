{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/ResponsiveDrawer.tsx\";\n\n/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst MyAppBar = props => {\n  const {\n    classes,\n    handleDrawerOpen,\n    title\n  } = props;\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, title)));\n};\n\nexport default MyAppBar;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/ResponsiveDrawer.tsx"],"names":["React","AppBar","Toolbar","IconButton","Typography","clsx","MenuIcon","MyAppBar","props","classes","handleDrawerOpen","title","appBar","appBarShift","open","menuButton","hide"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsCC,UAAtC,QAAwD,mBAAxD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,gBAAX;AAA6BC,IAAAA;AAA7B,MAAuCH,KAA7C;AAEA,sBACI,oBAAC,MAAD;AACI,IAAA,QAAQ,EAAC,OADb;AAEI,IAAA,SAAS,EAAEH,IAAI,CAACI,OAAO,CAACG,MAAT,EAAiB;AAC5B,OAACH,OAAO,CAACI,WAAT,GAAuBC;AADK,KAAjB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,kBAAW,aAFf;AAGI,IAAA,OAAO,EAAEJ,gBAHb;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,SAAS,EAAEL,IAAI,CAACI,OAAO,CAACM,UAAT,EAAqBD,IAAI,IAAIL,OAAO,CAACO,IAArC,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,eAUI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KADL,CAVJ,CANJ,CADJ;AAuBH,CA1BD;;AA4BA,eAAeJ,QAAf","sourcesContent":["/* eslint-disable no-restricted-globals */\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { title } from \"process\";\n\nconst MyAppBar = (props: any) => {\n    const { classes, handleDrawerOpen, title } = props;\n\n    return (\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n            })}\n        >\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, open && classes.hide)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    {title}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default MyAppBar;"]},"metadata":{},"sourceType":"module"}