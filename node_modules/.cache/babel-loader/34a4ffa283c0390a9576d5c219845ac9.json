{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/SpecialSetsSliders.tsx\";\nimport React from 'react';\nimport { Slider } from '@material-ui/core';\n\nconst SetsSliders = props => {\n  const {\n    defaultValue = null,\n    handleSliderChange\n  } = props;\n  return /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: defaultValue || 1.0,\n    step: 0.05,\n    min: 0,\n    max: 1,\n    marks: [{\n      value: 0,\n      label: '0%'\n    }, {\n      value: 1,\n      label: '100%'\n    }],\n    valueLabelDisplay: \"on\",\n    getAriaValueText: x => `${x * 100}%`,\n    valueLabelFormat: x => `${x * 100}%`,\n    onChange: handleSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default SetsSliders;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/SpecialSetsSliders.tsx"],"names":["React","Slider","SetsSliders","props","defaultValue","handleSliderChange","value","label","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAChC,QAAM;AAACC,IAAAA,YAAY,GAAC,IAAd;AAAoBC,IAAAA;AAApB,MAA0CF,KAAhD;AAEA,sBACI,oBAAC,MAAD;AACI,IAAA,YAAY,EAAEC,YAAY,IAAI,GADlC;AAEI,IAAA,IAAI,EAAE,IAFV;AAGI,IAAA,GAAG,EAAE,CAHT;AAII,IAAA,GAAG,EAAE,CAJT;AAKI,IAAA,KAAK,EAAE,CACH;AAACE,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAC;AAAjB,KADG,EAEH;AAACD,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAC;AAAjB,KAFG,CALX;AASI,IAAA,iBAAiB,EAAC,IATtB;AAUI,IAAA,gBAAgB,EAAGC,CAAD,IAAa,GAAEA,CAAC,GAAC,GAAI,GAV3C;AAWI,IAAA,gBAAgB,EAAGA,CAAD,IAAa,GAAEA,CAAC,GAAC,GAAI,GAX3C;AAYI,IAAA,QAAQ,EAAEH,kBAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH,CAnBD;;AAqBA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport { Slider } from '@material-ui/core';\n\nconst SetsSliders = (props: any) => {\n    const {defaultValue=null, handleSliderChange} = props;\n\n    return (\n        <Slider\n            defaultValue={defaultValue || 1.0}\n            step={0.05}\n            min={0}\n            max={1}\n            marks={[\n                {value: 0, label:'0%'}, \n                {value: 1, label:'100%'}\n            ]}\n            valueLabelDisplay=\"on\"\n            getAriaValueText={(x: any) => `${x*100}%`}\n            valueLabelFormat={(x: any) => `${x*100}%`}\n            onChange={handleSliderChange}\n        />\n    );\n}\n\nexport default SetsSliders;\n"]},"metadata":{},"sourceType":"module"}