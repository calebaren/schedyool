{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx\";\n// calebaren.github.io\nimport React from 'react';\nimport { TextField, Grid, makeStyles } from '@material-ui/core';\nimport StartIcon from './HtmlTooltip';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n    margin: theme.spacing(1.5)\n  }\n}));\n\nconst Input = props => {\n  const {\n    variant,\n    label,\n    type,\n    name,\n    value,\n    error = null,\n    onInput,\n    breakpoint,\n    helpText,\n    icon,\n    ...other\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: breakpoint || 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(StartIcon, {\n        helpText: helpText,\n        icon: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 42\n        }\n      })\n    },\n    variant: variant || \"outlined\",\n    type: type || \"number\",\n    label: label,\n    name: name,\n    value: value,\n    onInput: onInput\n  }, error && {\n    error: true,\n    helperText: error\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx"],"names":["React","TextField","Grid","makeStyles","StartIcon","useStyles","theme","root","width","margin","spacing","Input","props","variant","label","type","name","value","error","onInput","breakpoint","helpText","icon","other","classes","startAdornment","helperText"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,KADL;AAEFC,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,GAAd;AAFN;AAD+B,CAAZ,CAAD,CAA5B;;AAOA,MAAMC,KAAK,GAAIC,KAAD,IAA6B;AACvC,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,IAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA,KALE;AAMFC,IAAAA,KAAK,GAAC,IANJ;AAOFC,IAAAA,OAPE;AAQFC,IAAAA,UARE;AASFC,IAAAA,QATE;AAUFC,IAAAA,IAVE;AAWF,OAAGC;AAXD,MAYFX,KAZJ;AAcA,QAAMY,OAAO,GAAGnB,SAAS,EAAzB;AACA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAEe,UAAU,IAAI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACjB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAE,IADf;AAEI,IAAA,UAAU,EAAE;AACRkB,MAAAA,cAAc,eAAG,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAEJ,QAArB;AAA+B,QAAA,IAAI,EAAEC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADT,KAFhB;AAKI,IAAA,OAAO,EAAET,OAAO,IAAI,UALxB;AAMI,IAAA,IAAI,EAAEE,IAAI,IAAI,QANlB;AAOI,IAAA,KAAK,EAAED,KAPX;AAQI,IAAA,IAAI,EAAEE,IARV;AASI,IAAA,KAAK,EAAEC,KATX;AAUI,IAAA,OAAO,EAAEE;AAVb,KAWSD,KAAK,IAAI;AAACA,IAAAA,KAAK,EAAE,IAAR;AAAcQ,IAAAA,UAAU,EAAER;AAA1B,GAXlB,EAYQK,KAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ,CADJ;AAoBH,CApCD;;AAsCA,eAAeZ,KAAf","sourcesContent":["// calebaren.github.io\nimport React from 'react';\nimport { TextField, Grid, makeStyles } from '@material-ui/core';\nimport StartIcon from './HtmlTooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n        margin: theme.spacing(1.5),\n    }\n}));\n\nconst Input = (props: any): JSX.Element => {\n    const { \n        variant, \n        label, \n        type, \n        name, \n        value, \n        error=null, \n        onInput,\n        breakpoint,\n        helpText,\n        icon,\n        ...other\n    } = props;\n\n    const classes = useStyles();\n    return (\n        <Grid item xs={breakpoint || 12}>\n            <div className={classes.root}>\n                <TextField\n                    fullWidth={true}\n                    InputProps={{\n                        startAdornment: (<StartIcon helpText={helpText} icon={icon} />),\n                    }}\n                    variant={variant || \"outlined\"}\n                    type={type || \"number\"}\n                    label={label}\n                    name={name}\n                    value={value}\n                    onInput={onInput}\n                    {...(error && {error: true, helperText: error})}\n                    {...other}\n                />\n            </div>\n        </Grid>\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}