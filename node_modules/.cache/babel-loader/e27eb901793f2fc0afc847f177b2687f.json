{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/MultistepFormPages/PageSix.tsx\";\nimport React from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography, Grid } from '@material-ui/core';\n\nconst PageSix = props => {\n  const {\n    values,\n    nextStep,\n    prevStep,\n    helpTexts,\n    handlePackedSetsChange\n  } = props;\n  return /*#__PURE__*/React.createElement(FormPages.MiddlePage, {\n    nextStep: nextStep,\n    prevStep: prevStep,\n    values: values,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Packing special sets.\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"In addition, you may ask Schedyool to \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 55\n    }\n  }, \"pack\"), \" the students of each special grouping into a small number of classrooms in order to minimize the number of special teachers needed, like ICT or ENL.\\xA0 For \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 223\n    }\n  }, \"each\"), \" special group, you need to enter one number \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 289\n    }\n  }, \"for each grade\"), \".\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"As an example, if there are 6 grades in your school and you want to specify 2 special sets of students for ICT and ENL students, you will need to enter 6 number of rooms for the ICT students (1 number for each grade) and 6 number of rooms for the ENL students for a total of 12 number of rooms. These numbers should ideally be small (between 1-3) because they are numbers of classrooms.\\xA0For example, 1 room (for kindergarten), 1 room (for 1st grade), 2 rooms (for 2nd grade), 2 rooms (for 3rd grade), 1 room (for 4th grade),and 2 rooms (for 5th grade) if you are a K-5 grade school.\\xA0If you have no such constraint, select \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 639\n    }\n  }, \"None\"), \".\\xA0 \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 659\n    }\n  }, \"Remember, you will have to enter these numbers for each special case of students!\")), values.specialSets.map((x, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, i)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, [...Array(values.maxGrade)].map((y, j) => {\n      return /*#__PURE__*/React.createElement(Controls.SelectField, {\n        key: j,\n        setIndex: i,\n        gradeIndex: j,\n        maxGrade: values.maxGrades,\n        values: values,\n        handlePackedSetsChange: handlePackedSetsChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }\n      });\n    })));\n  }));\n};\n\nexport default PageSix;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/MultistepFormPages/PageSix.tsx"],"names":["React","Controls","FormPages","Typography","Grid","PageSix","props","values","nextStep","prevStep","helpTexts","handlePackedSetsChange","specialSets","map","x","i","Array","maxGrade","y","j","maxGrades"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,UAAT,EAA6BC,IAA7B,QAAoD,mBAApD;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAgB;AAC5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA;AAAzC,MAAoEL,KAA1E;AACA,sBACI,oBAAC,SAAD,CAAW,UAAX;AACI,IAAA,QAAQ,EAAEE,QADd;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,MAAM,EAAEF,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,eAQI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD1C,iLACkN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlN,gEACoR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADpR,MARJ,eAWI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0oBACknB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlnB,yBACsoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADtoB,CAXJ,EAgBQA,MAAM,CAACK,WAAP,CAAmBC,GAAnB,CAAuB,CAACC,CAAD,EAASC,CAAT,KAAuB;AAC1C,wBACI;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,CADL,CADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,GAAGC,KAAK,CAACT,MAAM,CAACU,QAAR,CAAT,EAA4BJ,GAA5B,CAAgC,CAACK,CAAD,EAASC,CAAT,KAAuB;AACpD,0BACI,oBAAC,QAAD,CAAU,WAAV;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,QAAQ,EAAIJ,CAFhB;AAGI,QAAA,UAAU,EAAII,CAHlB;AAII,QAAA,QAAQ,EAAEZ,MAAM,CAACa,SAJrB;AAKI,QAAA,MAAM,EAAEb,MALZ;AAMI,QAAA,sBAAsB,EAAEI,sBAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH,KAXA,CADL,CANJ,CADJ;AAuBH,GAxBD,CAhBR,CADJ;AAmDH,CArDD;;AAuDA,eAAeN,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport Controls from '../../Components/Controls/Controls';\nimport FormPages from '../FormPages';\nimport { Typography, Button, Grid, TextField } from '@material-ui/core';\n\n\nconst PageSix = (props: any) => {\n    const { values, nextStep, prevStep, helpTexts, handlePackedSetsChange } = props;\n    return (\n        <FormPages.MiddlePage\n            nextStep={nextStep}\n            prevStep={prevStep}\n            values={values}\n        >\n            <Typography variant=\"subtitle2\" paragraph>\n                Packing special sets.\n            </Typography>\n            <Typography variant=\"body2\" paragraph>\n                In addition, you may ask Schedyool to <em>pack</em> the students of each special grouping into a small number of classrooms in order to minimize the number of special teachers needed, like ICT or ENL.  For <strong>each</strong> special group, you need to enter one number <strong>for each grade</strong>.\n            </Typography>\n            <Typography variant=\"body2\" paragraph>\n                As an example, if there are 6 grades in your school and you want to specify 2 special sets of students for ICT and ENL students, you will need to enter 6 number of rooms for the ICT students (1 number for each grade) and 6 number of rooms for the ENL students for a total of 12 number of rooms. These numbers should ideally be small (between 1-3) because they are numbers of classrooms. For example, 1 room (for kindergarten), 1 room (for 1st grade), 2 rooms (for 2nd grade), 2 rooms (for 3rd grade), 1 room (for 4th grade),and 2 rooms (for 5th grade) if you are a K-5 grade school. If you have no such constraint, select <code>None</code>.  <em>Remember, you will have to enter these numbers for each special case of students!</em>\n            </Typography>\n            {\n\n                values.specialSets.map((x: any, i: number) => {\n                    return (\n                        <div key={i}>\n                            <Grid item xs={12}>\n                                <Typography>\n                                    {i}\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                {[...Array(values.maxGrade)].map((y: any, j: number) => {\n                                    return (\n                                        <Controls.SelectField\n                                            key={j}\n                                            setIndex = {i}\n                                            gradeIndex = {j}\n                                            maxGrade={values.maxGrades}\n                                            values={values}\n                                            handlePackedSetsChange={handlePackedSetsChange}\n                                        />\n                                    )\n                                })}\n                            </Grid>\n                        </div>\n                    )\n                })}\n            {/* <Controls.Input\n                helpText={helpTexts.numSpecialSets}\n                label=\"Number of special sets\"\n                name=\"numSpecialSets\"\n                value={values.numSpecialSets}\n                onInput={handleInputChange}\n            /> */}\n        </FormPages.MiddlePage>\n    );\n};\n\nexport default PageSix;"]},"metadata":{},"sourceType":"module"}