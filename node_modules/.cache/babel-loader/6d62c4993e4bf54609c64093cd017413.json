{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/SideMenu.tsx\";\nimport React, { useState } from 'react';\nimport { makeStyles, Divider, List, ListItem, ListItemIcon, ListItemText, useTheme, Hidden, Drawer } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nconst drawerWidth = 240; // withStyles, makeStyles hooks for CSS styling -> JSS\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  // sideMenu: {\n  //     flexDirection: 'column',\n  //     position: 'fixed',\n  //     left: '0px',\n  //     width: '200px',\n  //     height: '100%',\n  //     backgroundColor: theme.palette.primary.dark,\n  //     [theme.breakpoints.down('sm')]: {\n  //         width: '0px'\n  //     },\n  // },\n  drawer: {\n    [theme.breakpoints.up('xs')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\n\nconst SideMenu = () => {\n  const classes = useStyle();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const pages = [{\n    text: 'Home',\n    icon: /*#__PURE__*/React.createElement(InboxIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }),\n    url: '/'\n  }, {\n    text: 'Schedule',\n    icon: /*#__PURE__*/React.createElement(MailIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }),\n    url: '/scheduler'\n  }]; // toggles drawer state\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const sideMenu = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, pages.map(page => /*#__PURE__*/React.createElement(Link, {\n    to: page.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: page.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, page.icon), /*#__PURE__*/React.createElement(ListItemText, {\n    color: \"#000\",\n    primary: page.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }))))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.drawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: theme.direction === 'rtl' ? 'right' : 'left',\n    open: mobileOpen,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, sideMenu)), /*#__PURE__*/React.createElement(Hidden, {\n    xsDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    variant: \"permanent\",\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, sideMenu)))); // return (\n  //     <div className={classes.toolbar} >\n  //         <Divider />\n  //         <List>\n  //             {pages.map((page) => (\n  //                 <Link to={page.url}>\n  //                     <ListItem button key={page.text}>\n  //                         <ListItemIcon>{page.icon}</ListItemIcon>\n  //                         <ListItemText color='#000' primary={page.text} />\n  //                     </ListItem>\n  //                 </Link>\n  //             ))}\n  //         </List>\n  //     </div>\n  // );\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/SideMenu.tsx"],"names":["React","useState","makeStyles","Divider","List","ListItem","ListItemIcon","ListItemText","useTheme","Hidden","Drawer","InboxIcon","MailIcon","Link","Header","drawerWidth","useStyle","theme","root","display","drawer","breakpoints","up","width","flexShrink","toolbar","mixins","drawerPaper","SideMenu","classes","mobileOpen","setMobileOpen","pages","text","icon","url","handleDrawerToggle","sideMenu","map","page","direction","paper"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, Divider, List, ListItem, ListItemIcon, ListItemText, useTheme, Hidden, Drawer } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\n\nconst drawerWidth = 240;\n\n// withStyles, makeStyles hooks for CSS styling -> JSS\nconst useStyle = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    // sideMenu: {\n    //     flexDirection: 'column',\n    //     position: 'fixed',\n    //     left: '0px',\n    //     width: '200px',\n    //     height: '100%',\n    //     backgroundColor: theme.palette.primary.dark,\n    //     [theme.breakpoints.down('sm')]: {\n    //         width: '0px'\n    //     },\n    // },\n    drawer: {\n        [theme.breakpoints.up('xs')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n}));\n\nconst SideMenu = (): any => {\n    const classes = useStyle();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = useState(false);\n\n    const pages = [\n        {\n            text: 'Home',\n            icon: <InboxIcon />,\n            url: '/'\n        },\n        {\n            text: 'Schedule',\n            icon: <MailIcon />,\n            url: '/scheduler'\n        },\n    ];\n\n    // toggles drawer state\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const sideMenu = (\n        <div className={classes.toolbar} >\n            <Divider />\n            <List>\n                {pages.map((page) => (\n                    <Link to={page.url}>\n                        <ListItem button key={page.text}>\n                            <ListItemIcon>{page.icon}</ListItemIcon>\n                            <ListItemText color='#000' primary={page.text} />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Header />\n            <nav className={classes.drawer}>\n                <Hidden smUp implementation=\"css\">\n                    <Drawer \n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper\n                        }}\n                    >\n                        {sideMenu}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {sideMenu}\n                    </Drawer>\n                </Hidden>\n            </nav>\n        </div>\n    )\n\n    // return (\n    //     <div className={classes.toolbar} >\n    //         <Divider />\n    //         <List>\n    //             {pages.map((page) => (\n    //                 <Link to={page.url}>\n    //                     <ListItem button key={page.text}>\n    //                         <ListItemIcon>{page.icon}</ListItemIcon>\n    //                         <ListItemText color='#000' primary={page.text} />\n    //                     </ListItem>\n    //                 </Link>\n    //             ))}\n    //         </List>\n    //     </div>\n    // );\n}\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}