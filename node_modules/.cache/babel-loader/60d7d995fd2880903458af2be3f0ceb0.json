{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst Input = props => {\n  const {\n    variant,\n    label,\n    type,\n    name,\n    value,\n    error = null,\n    onInput,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({\n    variant: variant || \"outlined\",\n    type: type || \"number\",\n    label: label,\n    name: name,\n    value: value,\n    onInput: onInput\n  }, error && {\n    error: true,\n    helperText: error\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Controls/Input.tsx"],"names":["React","TextField","Input","props","variant","label","type","name","value","error","onInput","other","helperText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAA6B;AACvC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,KAAK,GAAC,IAA3C;AAAiDC,IAAAA,OAAjD;AAA0D,OAAGC;AAA7D,MAAsER,KAA5E;AACA,sBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEC,OAAO,IAAI,UADxB;AAEI,IAAA,IAAI,EAAEE,IAAI,IAAI,QAFlB;AAGI,IAAA,KAAK,EAAED,KAHX;AAII,IAAA,IAAI,EAAEE,IAJV;AAKI,IAAA,KAAK,EAAEC,KALX;AAMI,IAAA,OAAO,EAAEE;AANb,KAOSD,KAAK,IAAI;AAACA,IAAAA,KAAK,EAAE,IAAR;AAAcG,IAAAA,UAAU,EAAEH;AAA1B,GAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAWH,CAbD;;AAeA,eAAeP,KAAf","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\n\n\nconst Input = (props: any): JSX.Element => {\n    const { variant, label, type, name, value, error=null, onInput, ...other} = props;\n    return (\n        <TextField\n            variant={variant || \"outlined\"}\n            type={type || \"number\"}\n            label={label}\n            name={name}\n            value={value}\n            onInput={onInput}\n            {...(error && {error: true, helperText: error})}\n        />\n    );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}