{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/ErrorModal.tsx\";\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => createStyles({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst ErrorModal = props => {\n  const {\n    text,\n    children\n  } = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, text)));\n};\n\nexport default ErrorModal;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/ErrorModal.tsx"],"names":["React","makeStyles","createStyles","Popover","Typography","useStyles","theme","typography","padding","spacing","ErrorModal","props","text","children","classes","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAC3BJ,YAAY,CAAC;AACXK,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADC;AADD,CAAD,CADc,CAA5B;;AAQA,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAC/B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBF,KAAzB;AACF,QAAMG,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACiB,QAAN,CAAyC,IAAzC,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAgD;AAClEH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,IAAI,GAAGC,OAAO,CAACR,QAAD,CAApB;AACA,QAAMS,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,QADL,eAEE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAEW,EADN;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,QAAQ,EAAEP,QAHZ;AAIE,IAAA,OAAO,EAAEM,WAJX;AAKE,IAAA,YAAY,EAAE;AACZK,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KALhB;AASE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEb,OAAO,CAACP,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CK,IAA5C,CAdF,CAFF,CADF;AAqBD,CArCD;;AAuCA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst ErrorModal = (props: any) => {\n    const {text, children} = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n        {children}\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>{text}</Typography>\n      </Popover>\n    </div>\n  );\n}\n\nexport default ErrorModal;"]},"metadata":{},"sourceType":"module"}