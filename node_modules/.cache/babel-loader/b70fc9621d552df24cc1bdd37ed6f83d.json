{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Header.tsx\";\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, IconButton, makeStyles, Typography, createStyles, useTheme, CssBaseline, Drawer, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport SchoolIcon from '@material-ui/icons/School';\nconst drawerWidth = 200; // const useStyles = makeStyles(theme => ({\n//     root: {\n//         backgroundColor: '#FFF',\n//     },\n//     searchInput: {\n//         opacity: '0.6',\n//         padding: `0px ${theme.spacing(1)}px`,\n//         fontSize: '0.8rem',\n//         '&:hover': {\n//             backgroundColor: '#f2f2f2',\n//         },\n//         '& .MuiSvgIcon-root': {\n//             marginRight: theme.spacing(1),\n//         },\n//     },\n//     appBar: {\n//         transition: theme.transitions.create(['margin', 'width'], {\n//             easing: theme.transitions.easing.sharp,\n//             duration: theme.transitions.duration.leavingScreen,\n//         }),\n//     },\n//     appBarShift: {\n//         width: `calc(100%-${drawerWidth}px)`,\n//         marginLeft: drawerWidth,\n//         transition: theme.transitions.create(['margin', 'width'], {\n//             easing: theme.transitions.easing.easeOut,\n//             duration: theme.transitions.duration.enteringScreen,\n//         }),\n//     },\n//     menuButton: {\n//         marginRight: theme.spacing(2),\n//         [theme.breakpoints.up('sm')]: {\n//             display: 'none',\n//         },\n//     },\n//     hide: {\n//         display: 'none',\n//     }\n// }));\n\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: theme.palette.primary.dark\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})); // const Header = (props: any): any => {\n//     const classes = useStyles();\n//     const { title, onClick, ...other } = props;\n//     return (\n//         <AppBar \n//             position=\"fixed\" \n//             className={clsx(classes.appBar, {\n//                 // eslint-disable-next-line no-restricted-globals\n//                 [classes.appBarShift]: open,\n//             })}\n//         >\n//             <Toolbar>\n//                 <Grid container alignItems=\"center\">\n//                     <Grid item>\n//                         <IconButton\n//                             color=\"inherit\"\n//                             aria-label=\"open drawer\"\n//                             edge=\"start\"\n//                             onClick={onClick}\n//                             className={classes.menuButton}\n//                             {...other}\n//                         >\n//                             <MenuIcon />\n//                         </IconButton>\n//                     </Grid>\n//                     <Grid item>\n//                         <Typography \n//                             variant=\"h4\"\n//                             component=\"div\"\n//                             color=\"textPrimary\"\n//                         >\n//                             {title}\n//                         </Typography>\n//                         {/* <InputBase \n//                             placeholder=\"Search Website\" \n//                             className={classes.searchInput}\n//                             startAdornment={<SearchIcon fontSize=\"small\" />}\n//                         /> */}\n//                     </Grid>\n//                     <Grid item xs></Grid>\n//                     <Grid item>\n//                         <IconButton>\n//                             <Badge badgeContent={4} color=\"secondary\" >\n//                                 <NotificationsNoneIcon />\n//                             </Badge>\n//                         </IconButton>\n//                         {/* <IconButton>\n//                             <Badge badgeContent={3} color=\"secondary\">\n//                                 <ChatBubbleOutlineIcon />\n//                             </Badge>\n//                         </IconButton> */}\n//                         <IconButton>\n//                             <PowerSettingsNewIcon />\n//                         </IconButton>\n//                     </Grid>\n//                 </Grid>\n//             </Toolbar>\n//         </AppBar>\n//     )\n// }\n\nconst Header = props => {\n  const {\n    title,\n    children\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const pages = [{\n    text: 'Home',\n    icon: /*#__PURE__*/React.createElement(HomeIcon, {\n      style: {\n        color: '#FFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }),\n    url: '/'\n  }, {\n    text: 'Schedule',\n    icon: /*#__PURE__*/React.createElement(SchoolIcon, {\n      style: {\n        color: '#FFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }),\n    url: '/scheduler'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SchoolIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, title))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, theme.direction === 'ltr' ? /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 89\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, pages.map((page, i) => /*#__PURE__*/React.createElement(Link, {\n    to: page.url,\n    style: {\n      textDecoration: 'none',\n      color: '#FFF'\n    },\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: page.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, page.icon), /*#__PURE__*/React.createElement(ListItemText, {\n    color: \"inherit\",\n    primary: page.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  })))))), /*#__PURE__*/React.createElement(\"main\", {\n    className: clsx(classes.content, {\n      [classes.contentShift]: open\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, children));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Components/Header.tsx"],"names":["React","useState","AppBar","Toolbar","IconButton","makeStyles","Typography","createStyles","useTheme","CssBaseline","Drawer","Divider","List","ListItem","ListItemIcon","ListItemText","ChevronLeftIcon","ChevronRightIcon","MenuIcon","clsx","HomeIcon","Link","SchoolIcon","drawerWidth","useStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","backgroundColor","palette","primary","dark","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Header","props","title","children","classes","open","setOpen","handleDrawerOpen","handleDrawerClose","pages","text","icon","color","url","paper","direction","map","page","i","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles, Typography, Theme, createStyles, useTheme, CssBaseline, Drawer, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from 'clsx';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Link } from 'react-router-dom';\nimport MyAppBar from './MyAppBar';\nimport SchoolIcon from '@material-ui/icons/School';\n\nconst drawerWidth = 200;\n\n// const useStyles = makeStyles(theme => ({\n//     root: {\n//         backgroundColor: '#FFF',\n//     },\n//     searchInput: {\n//         opacity: '0.6',\n//         padding: `0px ${theme.spacing(1)}px`,\n//         fontSize: '0.8rem',\n//         '&:hover': {\n//             backgroundColor: '#f2f2f2',\n//         },\n//         '& .MuiSvgIcon-root': {\n//             marginRight: theme.spacing(1),\n//         },\n//     },\n//     appBar: {\n//         transition: theme.transitions.create(['margin', 'width'], {\n//             easing: theme.transitions.easing.sharp,\n//             duration: theme.transitions.duration.leavingScreen,\n//         }),\n//     },\n//     appBarShift: {\n//         width: `calc(100%-${drawerWidth}px)`,\n//         marginLeft: drawerWidth,\n//         transition: theme.transitions.create(['margin', 'width'], {\n//             easing: theme.transitions.easing.easeOut,\n//             duration: theme.transitions.duration.enteringScreen,\n//         }),\n//     },\n//     menuButton: {\n//         marginRight: theme.spacing(2),\n//         [theme.breakpoints.up('sm')]: {\n//             display: 'none',\n//         },\n//     },\n//     hide: {\n//         display: 'none',\n//     }\n// }));\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      backgroundColor: theme.palette.primary.dark,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }),\n);\n\n// const Header = (props: any): any => {\n//     const classes = useStyles();\n//     const { title, onClick, ...other } = props;\n\n//     return (\n//         <AppBar \n//             position=\"fixed\" \n//             className={clsx(classes.appBar, {\n//                 // eslint-disable-next-line no-restricted-globals\n//                 [classes.appBarShift]: open,\n//             })}\n//         >\n//             <Toolbar>\n//                 <Grid container alignItems=\"center\">\n//                     <Grid item>\n//                         <IconButton\n//                             color=\"inherit\"\n//                             aria-label=\"open drawer\"\n//                             edge=\"start\"\n//                             onClick={onClick}\n//                             className={classes.menuButton}\n//                             {...other}\n//                         >\n//                             <MenuIcon />\n//                         </IconButton>\n//                     </Grid>\n//                     <Grid item>\n//                         <Typography \n//                             variant=\"h4\"\n//                             component=\"div\"\n//                             color=\"textPrimary\"\n//                         >\n//                             {title}\n//                         </Typography>\n//                         {/* <InputBase \n//                             placeholder=\"Search Website\" \n//                             className={classes.searchInput}\n//                             startAdornment={<SearchIcon fontSize=\"small\" />}\n//                         /> */}\n//                     </Grid>\n//                     <Grid item xs></Grid>\n//                     <Grid item>\n//                         <IconButton>\n//                             <Badge badgeContent={4} color=\"secondary\" >\n//                                 <NotificationsNoneIcon />\n//                             </Badge>\n//                         </IconButton>\n//                         {/* <IconButton>\n//                             <Badge badgeContent={3} color=\"secondary\">\n//                                 <ChatBubbleOutlineIcon />\n//                             </Badge>\n//                         </IconButton> */}\n//                         <IconButton>\n//                             <PowerSettingsNewIcon />\n//                         </IconButton>\n//                     </Grid>\n//                 </Grid>\n//             </Toolbar>\n//         </AppBar>\n//     )\n// }\n\nconst Header = (props: any) => {\n    const { title, children } = props;\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n  \n    const handleDrawerOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleDrawerClose = () => {\n      setOpen(false);\n    };\n\n    const pages = [\n        {\n            text: 'Home',\n            icon: <HomeIcon style={{ color: '#FFF' }} />,\n            url: '/'\n        },\n        {\n            text: 'Schedule',\n            icon: <SchoolIcon style={{ color: '#FFF' }} />,\n            url: '/scheduler'\n        },\n    ];\n  \n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Link to=\"/\">\n              <IconButton>\n                <SchoolIcon />\n              </IconButton>\n            </Link>\n            <Typography variant=\"h6\" noWrap>\n              {title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {/* <MyAppBar title={title} handleDrawerOpen={handleDrawerOpen} classes={classes} /> */}\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon style={{color: '#FFF'}}/> : <ChevronRightIcon style={{color: '#FFF'}}/>}\n            </IconButton>\n          </div>\n          <Divider />\n            <List>\n                {pages.map((page, i) => (\n                    <Link to={page.url} style={{ textDecoration: 'none', color: '#FFF' }} key={i}>\n                        <ListItem button key={page.text}>\n                            <ListItemIcon>{page.icon}</ListItemIcon>\n                            <ListItemText color=\"inherit\" primary={page.text} />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n            {children}\n        </main>\n      </div>\n    );\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}