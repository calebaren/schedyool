{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\nconst initialFieldValues = {\n  fullName: '',\n  email: '',\n  numBlendedLearning: 0,\n  numSchedules: 0,\n  numRooms: 1,\n  numSetsSameDay: 0,\n  numPairsDiffDay: 0,\n  numSpecialSets: 0\n};\n\nconst DataForm = () => {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(initialFieldValues);\n\n  const validate = () => {\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    let temp = {\n      fullName: '',\n      email: ''\n    };\n    temp.fullName = values.fullName ? '' : 'Your name is required.';\n    temp.email = re.test(values.email) ? '' : 'Your email is required.';\n    setErrors({ ...temp\n    });\n    return Object.values(temp).every(x => x === '');\n  };\n\n  const handleCaptcha = value => {\n    console.log(\"captcha value:\", value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      window.alert('validated response...');\n    }\n  }; // const helpTitles = {\n  //     numBlendedLearning: 'Number of students in Blended Learning',\n  //     numSchedules: 'Number of schedules',\n  //     numRooms: '',\n  // };\n\n\n  const helpTexts = {\n    numBlendedLearning: 'Enter the number of students in the school who will participate in blended learning.  You will provide details about the students later, in csv (comma-separated-values) files.',\n    numSchedules: 'You need to enter the number of schedules needed. For students attending, say, e.g., either Monday-Tuesday or Thursday-Friday and alternate Wednesdays, this number would be 2. For those attending in person 1/3 of the time, you need three schedules, so enter 3.',\n    numRooms: 'The number of classrooms available every day.',\n    numSetsSameDay: 'The code allows the user to specify sets of children who should attend in-person instruction on the same days. The sets can be arbitrarily large, but the larger the set is, the less likely the goal will be achieved. You need to enter the number of such sets, 0 if there are none. The actual sets themselves will be added later. Keep in mind that the optimizer may not succeed at satisfying all the constraints.',\n    numPairsDiffDay: 'You may also specify pairs of 2 students each who should be scheduled on different days. Enter the number of such pairs, 0 if there are none.',\n    numSpecialSets: 'You may also enter a collection of sets of students, e.g., ICT and ENL, for special treatment. You can enter as many sets as you wish but you probably only have a few. Let\\'s call these \"special sets. The treatment of these sets is a bit complicated. Enter here the number of special sets, 0 if there are none.'\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    helpText: \"Enter your full name.\",\n    icon: /*#__PURE__*/React.createElement(AccountCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }),\n    required: true,\n    type: \"text\",\n    label: \"Full Name\",\n    name: \"fullName\",\n    value: values.fullName,\n    onInput: handleInputChange // error={errors.fullName}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    helpText: \"Enter your email.\",\n    icon: /*#__PURE__*/React.createElement(EmailIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 27\n      }\n    }),\n    required: true,\n    type: \"text\",\n    label: \"Email\",\n    name: \"email\",\n    value: values.email,\n    onInput: handleInputChange // error={errors.email}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    // helpTitle={helpTitles.numBlendedLearning}\n    helpText: helpTexts.numBlendedLearning,\n    label: \"Number of students for Blended Learning\",\n    name: \"numBlendedLearning\",\n    value: values.numBlendedLearning,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    // helpTitle={helpTitles.numSchedules}\n    helpText: helpTexts.numSchedules,\n    label: \"Number of Schedules\",\n    name: \"numSchedules\",\n    value: values.numSchedules,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    helpText: helpTexts.numRooms,\n    label: \"Number of Rooms\",\n    name: \"numRooms\",\n    value: values.numRooms,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    helpText: helpTexts.numSetsSameDay,\n    label: \"Number of sets on the same day\",\n    name: \"numSetsSameDay\",\n    value: values.numSetsSameDay,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    helpText: helpTexts.numPairsDiffDay,\n    label: \"Number of pairs on different days\",\n    name: \"numPairsDiffDay\",\n    value: values.numPairsDiffDay,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    helpText: helpTexts.numSpecialSets,\n    label: \"Number of special sets\",\n    name: \"numSpecialSets\",\n    value: values.numSpecialSets,\n    onInput: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Dropzone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.MyButton, {\n    type: \"submit\",\n    value: \"Submit\",\n    text: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.MyButton, {\n    type: \"reset\",\n    text: \"Reset\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }))));\n};\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\n\n\nexport default DataForm;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx"],"names":["React","Grid","useForm","Form","AccountCircle","EmailIcon","Controls","initialFieldValues","fullName","email","numBlendedLearning","numSchedules","numRooms","numSetsSameDay","numPairsDiffDay","numSpecialSets","DataForm","values","setValues","errors","setErrors","handleInputChange","validate","re","temp","test","Object","every","x","handleCaptcha","value","console","log","handleSubmit","e","preventDefault","window","alert","helpTexts"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, InputAdornment, Tooltip } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport MyButton from '../Components/Controls/MyButton';\n\nconst initialFieldValues = {\n    fullName: '',\n    email: '',\n    numBlendedLearning: 0,\n    numSchedules: 0,\n    numRooms: 1,\n    numSetsSameDay: 0,\n    numPairsDiffDay: 0,\n    numSpecialSets: 0,\n};\n\nconst DataForm = (): any => {\n    const { values, setValues, errors, setErrors, handleInputChange} = useForm(initialFieldValues);\n    const validate = () => {\n        const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/; \n        let temp = {\n            fullName: '',\n            email: '',\n        };\n        temp.fullName = values.fullName ? '' : 'Your name is required.';\n        temp.email = re.test(values.email) ? '' : 'Your email is required.';\n        setErrors({\n            ...temp\n        });\n\n        return Object.values(temp).every(x => x === '');\n    }\n\n    const handleCaptcha = (value: any) => {\n        console.log(\"captcha value:\", value);\n    };\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        if (validate()) {\n            window.alert('validated response...');\n        }\n    };\n\n    // const helpTitles = {\n    //     numBlendedLearning: 'Number of students in Blended Learning',\n    //     numSchedules: 'Number of schedules',\n    //     numRooms: '',\n    // };\n\n    const helpTexts = {\n        numBlendedLearning: 'Enter the number of students in the school who will participate in blended learning.  You will provide details about the students later, in csv (comma-separated-values) files.',\n        numSchedules: 'You need to enter the number of schedules needed. For students attending, say, e.g., either Monday-Tuesday or Thursday-Friday and alternate Wednesdays, this number would be 2. For those attending in person 1/3 of the time, you need three schedules, so enter 3.',\n        numRooms: 'The number of classrooms available every day.',\n        numSetsSameDay: 'The code allows the user to specify sets of children who should attend in-person instruction on the same days. The sets can be arbitrarily large, but the larger the set is, the less likely the goal will be achieved. You need to enter the number of such sets, 0 if there are none. The actual sets themselves will be added later. Keep in mind that the optimizer may not succeed at satisfying all the constraints.',\n        numPairsDiffDay: 'You may also specify pairs of 2 students each who should be scheduled on different days. Enter the number of such pairs, 0 if there are none.',\n        numSpecialSets: 'You may also enter a collection of sets of students, e.g., ICT and ENL, for special treatment. You can enter as many sets as you wish but you probably only have a few. Let\\'s call these \"special sets. The treatment of these sets is a bit complicated. Enter here the number of special sets, 0 if there are none.',\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Controls.Input \n                    helpText=\"Enter your full name.\"\n                    icon={<AccountCircle />}\n                    required\n                    type=\"text\"\n                    label=\"Full Name\"\n                    name=\"fullName\"\n                    value={values.fullName}\n                    onInput={handleInputChange}\n                    // error={errors.fullName}\n                />\n                <Controls.Input \n                    helpText=\"Enter your email.\"\n                    icon={<EmailIcon />}\n                    required\n                    type=\"text\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={values.email}\n                    onInput={handleInputChange}\n                    // error={errors.email}\n                />\n                <Controls.Input \n                    // helpTitle={helpTitles.numBlendedLearning}\n                    helpText={helpTexts.numBlendedLearning}\n                    label=\"Number of students for Blended Learning\"\n                    name=\"numBlendedLearning\"\n                    value={values.numBlendedLearning}\n                    onInput={handleInputChange}\n                />\n                <Controls.Input\n                    // helpTitle={helpTitles.numSchedules}\n                    helpText={helpTexts.numSchedules}\n                    label=\"Number of Schedules\"\n                    name=\"numSchedules\"\n                    value={values.numSchedules}\n                    onInput={handleInputChange}\n                />\n                <Controls.Input\n                    helpText={helpTexts.numRooms}\n                    label=\"Number of Rooms\"\n                    name=\"numRooms\"\n                    value={values.numRooms}\n                    onInput={handleInputChange}\n                />\n                <Controls.Input\n                    helpText={helpTexts.numSetsSameDay}\n                    label=\"Number of sets on the same day\"\n                    name=\"numSetsSameDay\"\n                    value={values.numSetsSameDay}\n                    onInput={handleInputChange}\n                />\n                <Controls.Input\n                    helpText={helpTexts.numPairsDiffDay}\n                    label=\"Number of pairs on different days\"\n                    name=\"numPairsDiffDay\"\n                    value={values.numPairsDiffDay}\n                    onInput={handleInputChange}\n                />\n                <Controls.Input\n                    helpText={helpTexts.numSpecialSets}\n                    label=\"Number of special sets\"\n                    name=\"numSpecialSets\"\n                    value={values.numSpecialSets}\n                    onInput={handleInputChange}\n                />\n                <Grid item xs={12}>\n                    <Controls.Dropzone />\n                </Grid>\n                <Grid item xs={12}>\n                    {/* <ReCAPTCHA sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\" onChange={handleCaptcha} /> */}\n                </Grid>\n                <Grid item xs={12}>\n                    <Controls.MyButton type=\"submit\" value=\"Submit\" text=\"Submit\" />\n                    <Controls.MyButton type=\"reset\" text=\"Reset\" color=\"default\" />\n                </Grid>\n            </Grid>\n        </Form>\n    )\n};\n\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\nexport default DataForm;"]},"metadata":{},"sourceType":"module"}