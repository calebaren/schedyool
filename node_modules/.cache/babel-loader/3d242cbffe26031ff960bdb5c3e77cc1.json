{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx\";\nimport React from 'react';\nimport { useForm } from '../Components/useForm';\nimport Controls from '../Components/Controls/Controls';\nconst initialFieldValues = {\n  fullName: '',\n  email: '',\n  numBlendedLearning: 0,\n  numSchedules: 0,\n  numRooms: 1,\n  numSetsSameDay: 0,\n  numPairsDiffDay: 0,\n  numSpecialSets: 0\n};\n\nconst DataForm = () => {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(initialFieldValues);\n\n  const validate = () => {\n    let temp = {\n      fullName: '',\n      email: ''\n    };\n    temp.fullName = values.fullName ? '' : 'Your name is required.';\n    temp.email = /$|.+@.+..+/.test(values.email) ? '' : 'Your email is required.';\n    setErrors({ ...temp\n    });\n  };\n\n  const handleCaptcha = value => {\n    console.log(\"captcha value:\", value);\n  }; // const handleSubmit = () => {\n  //     console.log('clicked');\n  //     window.alert('testing...');\n  // };\n  // return (\n  //     <Form onSubmit={() => window.alert('nooooo') }>\n  //         <Grid container>\n  //             <Grid item xs={6}>\n  //                 <Controls.Input \n  //                     InputProps={{\n  //                         startAdornment: (\n  //                         <InputAdornment position=\"start\">\n  //                             <AccountCircle />\n  //                         </InputAdornment>\n  //                         ),\n  //                     }}\n  //                     required\n  //                     type=\"text\"\n  //                     label=\"Full Name\"\n  //                     name=\"fullName\"\n  //                     value={values.fullName}\n  //                     onInput={handleInputChange}\n  //                 />\n  //                 <Controls.Input \n  //                     label=\"Blended Learning\"\n  //                     name=\"numBlendedLearning\"\n  //                     value={values.numBlendedLearning}\n  //                     onInput={handleInputChange}\n  //                 />\n  //                 <Controls.Input\n  //                     label=\"Number of Schedules\"\n  //                     name=\"numSchedules\"\n  //                     value={values.numSchedules}\n  //                     onInput={handleInputChange}\n  //                 />\n  //                 <Controls.Input\n  //                     label=\"Number of Rooms\"\n  //                     name=\"numRooms\"\n  //                     value={values.numRooms}\n  //                     onInput={handleInputChange}\n  //                 />\n  //             </Grid>\n  //             <Grid item xs={6}>\n  //                 <Controls.Input \n  //                     InputProps={{\n  //                         startAdornment: (\n  //                         <InputAdornment position=\"start\">\n  //                             <EmailIcon />\n  //                         </InputAdornment>\n  //                         ),\n  //                     }}\n  //                     required\n  //                     type=\"text\"\n  //                     label=\"Email\"\n  //                     name=\"email\"\n  //                     value={values.email}\n  //                     onInput={handleInputChange}\n  //                 />\n  //                 <Controls.Input\n  //                     label=\"Number of sets on the same day\"\n  //                     name=\"numSetsSameDay\"\n  //                     value={values.numSetsSameDay}\n  //                     onInput={handleInputChange}\n  //                 />\n  //                 <Controls.Input\n  //                     label=\"Number of pairs on different days\"\n  //                     name=\"numPairsDiffDay\"\n  //                     value={values.numPairsDiffDay}\n  //                     onInput={handleInputChange}\n  //                 />\n  //                 <Controls.Input\n  //                     label=\"Number of special sets\"\n  //                     name=\"numSpecialSets\"\n  //                     value={values.numSpecialSets}\n  //                     onInput={handleInputChange}\n  //                 />\n  //             </Grid>\n  //             <Grid item xs={12}>\n  //                 <Controls.Dropzone />\n  //             </Grid>\n  //             <Grid item xs={12}>\n  //                 {/* <ReCAPTCHA sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\" onChange={handleCaptcha} /> */}\n  //             </Grid>\n  //             <Grid item xs={12}>\n  //                 <Controls.MyButton type=\"submit\" value=\"Submit\" text=\"Submit\" />\n  //                 <Controls.MyButton type=\"reset\" text=\"Reset\" color=\"default\" />\n  //             </Grid>\n  //         </Grid>\n  //     </Form>\n  // )\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => console.log(\"no\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Controls.MyButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }));\n};\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\n\n\nexport default DataForm;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx"],"names":["React","useForm","Controls","initialFieldValues","fullName","email","numBlendedLearning","numSchedules","numRooms","numSetsSameDay","numPairsDiffDay","numSpecialSets","DataForm","values","setValues","errors","setErrors","handleInputChange","validate","temp","test","handleCaptcha","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAA8B,uBAA9B;AAGA,OAAOC,QAAP,MAAqB,iCAArB;AAIA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,EADa;AAEvBC,EAAAA,KAAK,EAAE,EAFgB;AAGvBC,EAAAA,kBAAkB,EAAE,CAHG;AAIvBC,EAAAA,YAAY,EAAE,CAJS;AAKvBC,EAAAA,QAAQ,EAAE,CALa;AAMvBC,EAAAA,cAAc,EAAE,CANO;AAOvBC,EAAAA,eAAe,EAAE,CAPM;AAQvBC,EAAAA,cAAc,EAAE;AARO,CAA3B;;AAWA,MAAMC,QAAQ,GAAG,MAAW;AACxB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAA6DhB,OAAO,CAACE,kBAAD,CAA1E;;AACA,QAAMe,QAAQ,GAAG,MAAM;AACnB,QAAIC,IAAI,GAAG;AACPf,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;AAIAc,IAAAA,IAAI,CAACf,QAAL,GAAgBS,MAAM,CAACT,QAAP,GAAkB,EAAlB,GAAuB,wBAAvC;AACAe,IAAAA,IAAI,CAACd,KAAL,GAAc,YAAD,CAAee,IAAf,CAAoBP,MAAM,CAACR,KAA3B,IAAoC,EAApC,GAAyC,yBAAtD;AACAW,IAAAA,SAAS,CAAC,EACN,GAAGG;AADG,KAAD,CAAT;AAGH,GAVD;;AAYA,QAAME,aAAa,GAAIC,KAAD,IAAgB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACH,GAFD,CAdwB,CAkBxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACI;AAAM,IAAA,QAAQ,EAAE,MAAKC,OAAO,CAACC,GAAR,CAAY,IAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,QAAV;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAlHD;AAoHA;;;;;;;;;;;;AAUA,eAAeZ,QAAf","sourcesContent":["import React from 'react';\nimport { Grid, InputAdornment } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport MyButton from '../Components/Controls/MyButton';\n\nconst initialFieldValues = {\n    fullName: '',\n    email: '',\n    numBlendedLearning: 0,\n    numSchedules: 0,\n    numRooms: 1,\n    numSetsSameDay: 0,\n    numPairsDiffDay: 0,\n    numSpecialSets: 0,\n};\n\nconst DataForm = (): any => {\n    const { values, setValues, errors, setErrors, handleInputChange} = useForm(initialFieldValues);\n    const validate = () => {\n        let temp = {\n            fullName: '',\n            email: '',\n        };\n        temp.fullName = values.fullName ? '' : 'Your name is required.';\n        temp.email = (/$|.+@.+..+/).test(values.email) ? '' : 'Your email is required.';\n        setErrors({\n            ...temp\n        });\n    }\n\n    const handleCaptcha = (value: any) => {\n        console.log(\"captcha value:\", value);\n    };\n\n    // const handleSubmit = () => {\n    //     console.log('clicked');\n    //     window.alert('testing...');\n    // };\n\n    // return (\n    //     <Form onSubmit={() => window.alert('nooooo') }>\n    //         <Grid container>\n    //             <Grid item xs={6}>\n    //                 <Controls.Input \n    //                     InputProps={{\n    //                         startAdornment: (\n    //                         <InputAdornment position=\"start\">\n    //                             <AccountCircle />\n    //                         </InputAdornment>\n    //                         ),\n    //                     }}\n    //                     required\n    //                     type=\"text\"\n    //                     label=\"Full Name\"\n    //                     name=\"fullName\"\n    //                     value={values.fullName}\n    //                     onInput={handleInputChange}\n    //                 />\n    //                 <Controls.Input \n    //                     label=\"Blended Learning\"\n    //                     name=\"numBlendedLearning\"\n    //                     value={values.numBlendedLearning}\n    //                     onInput={handleInputChange}\n    //                 />\n    //                 <Controls.Input\n    //                     label=\"Number of Schedules\"\n    //                     name=\"numSchedules\"\n    //                     value={values.numSchedules}\n    //                     onInput={handleInputChange}\n    //                 />\n    //                 <Controls.Input\n    //                     label=\"Number of Rooms\"\n    //                     name=\"numRooms\"\n    //                     value={values.numRooms}\n    //                     onInput={handleInputChange}\n    //                 />\n    //             </Grid>\n    //             <Grid item xs={6}>\n    //                 <Controls.Input \n    //                     InputProps={{\n    //                         startAdornment: (\n    //                         <InputAdornment position=\"start\">\n    //                             <EmailIcon />\n    //                         </InputAdornment>\n    //                         ),\n    //                     }}\n    //                     required\n    //                     type=\"text\"\n    //                     label=\"Email\"\n    //                     name=\"email\"\n    //                     value={values.email}\n    //                     onInput={handleInputChange}\n    //                 />\n    //                 <Controls.Input\n    //                     label=\"Number of sets on the same day\"\n    //                     name=\"numSetsSameDay\"\n    //                     value={values.numSetsSameDay}\n    //                     onInput={handleInputChange}\n    //                 />\n    //                 <Controls.Input\n    //                     label=\"Number of pairs on different days\"\n    //                     name=\"numPairsDiffDay\"\n    //                     value={values.numPairsDiffDay}\n    //                     onInput={handleInputChange}\n    //                 />\n    //                 <Controls.Input\n    //                     label=\"Number of special sets\"\n    //                     name=\"numSpecialSets\"\n    //                     value={values.numSpecialSets}\n    //                     onInput={handleInputChange}\n    //                 />\n    //             </Grid>\n    //             <Grid item xs={12}>\n    //                 <Controls.Dropzone />\n    //             </Grid>\n    //             <Grid item xs={12}>\n    //                 {/* <ReCAPTCHA sitekey=\"6LctKMEZAAAAAN4NYXg27JMINCdmFm-knz9Ea4-p\" onChange={handleCaptcha} /> */}\n    //             </Grid>\n    //             <Grid item xs={12}>\n    //                 <Controls.MyButton type=\"submit\" value=\"Submit\" text=\"Submit\" />\n    //                 <Controls.MyButton type=\"reset\" text=\"Reset\" color=\"default\" />\n    //             </Grid>\n    //         </Grid>\n    //     </Form>\n    // )\n    return (\n        <form onSubmit={() =>console.log(\"no\")}>\n            <Controls.MyButton type=\"submit\" />\n        </form>\n    )\n};\n\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\nexport default DataForm;"]},"metadata":{},"sourceType":"module"}