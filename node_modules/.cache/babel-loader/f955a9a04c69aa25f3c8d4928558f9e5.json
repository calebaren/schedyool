{"ast":null,"code":"var _jsxFileName = \"/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx\";\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useForm } from '../Components/useForm';\nimport Controls from '../Components/Controls/Controls';\nimport FormPages from './FormPages';\nimport PagesList from './FormPagesList';\nconst initialFieldValues = {\n  step: 1,\n  fullName: '',\n  email: '',\n  numBlendedLearning: 0,\n  numSchedules: 0,\n  numDays: 1,\n  numSetsSameDay: 0,\n  numPairsDiffDay: 0,\n  numSpecialSets: 0,\n  specialSets: [],\n  files: []\n};\n\nconst DataForm = () => {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleFileAdd,\n    handleFileDelete,\n    handleInputChange,\n    handleSpecialSetChange\n  } = useForm(initialFieldValues);\n  const helpTexts = {\n    numBlendedLearning: 'Enter the number of students in the school who will participate in blended learning.  You will provide details about the students later, in csv (comma-separated-values) files.',\n    numDays: 'Please enter a positive number.',\n    numRooms: 'The number of classrooms available every day.',\n    numSetsSameDay: 'The code allows the user to specify sets of children who should attend in-person instruction on the same days. The sets can be arbitrarily large, but the larger the set is, the less likely the goal will be achieved. You need to enter the number of such sets, 0 if there are none. The actual sets themselves will be added later. Keep in mind that the optimizer may not succeed at satisfying all the constraints.',\n    numPairsDiffDay: 'You may also specify pairs of 2 students each who should be scheduled on different days. Enter the number of such pairs, 0 if there are none.',\n    numSpecialSets: 'Enter here the number of special sets, 0 if there are none.'\n  }; // validate for names and emails\n\n  const validate = () => {\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    let temp = {\n      fullName: '',\n      email: ''\n    };\n    temp.fullName = values.fullName ? '' : 'Your name is required.';\n    temp.email = re.test(values.email) ? '' : 'Your email is required.';\n    setErrors({ ...temp\n    });\n    return Object.values(temp).every(x => x === '');\n  }; // proceed to next step\n\n\n  const nextStep = () => {\n    const {\n      step\n    } = values;\n    setValues({ ...values,\n      step: step + 1\n    });\n  }; // go back to previous step\n\n\n  const prevStep = () => {\n    const {\n      step\n    } = values;\n    setValues({ ...values,\n      step: step - 1\n    });\n  };\n\n  const handleCaptcha = value => {\n    console.log(\"captcha value:\", value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    nextStep();\n    window.alert('validated response...'); // if (validate()) {\n\n    const postUrl = 'https://lqi0rcs9b1.execute-api.us-east-1.amazonaws.com/prod/'; // const postUrl = 'https://scheduler.schedyool.com'\n\n    const payload = {\n      email: \"howard@cc.gatech.edu\",\n      num_students: 800,\n      num_rooms: 30,\n      num_days: 3,\n      max_grade: 5,\n      num_same_day_sets: 160,\n      num_diff_day_pairs: 100,\n      num_special_sets: 3,\n      num_rooms_to_be_packed_into: [[1, 1, 2, 2, 1, 2], [3, 2, 3, 2, 2, 3], [2, 2, 2, 2, 2, 2]],\n      fraction_for_special_set: [0.4, 0.3, 0.4]\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    };\n    fetch(postUrl, requestOptions).then(response => response.json()); // }\n  };\n\n  switch (values.step) {\n    case 1:\n      return /*#__PURE__*/React.createElement(PagesList.PageOne, {\n        nextStep: nextStep,\n        handleInputChange: handleInputChange,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(PagesList.PageTwo, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        helpTexts: helpTexts,\n        handleInputChange: handleInputChange,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(PagesList.PageThree, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        helpTexts: helpTexts,\n        handleInputChange: handleInputChange,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      });\n\n    case 4:\n      return /*#__PURE__*/React.createElement(PagesList.PageFour, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        helpTexts: helpTexts,\n        handleInputChange: handleInputChange,\n        handleSpecialSetChange: handleSpecialSetChange,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      });\n    // Sliders for special sets\n\n    case 5:\n      return /*#__PURE__*/React.createElement(PagesList.PageFive, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        helpTexts: helpTexts,\n        handleInputChange: handleInputChange,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      });\n    // Dropzone for files\n\n    case 6:\n      return /*#__PURE__*/React.createElement(FormPages.MiddlePage, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleInputChange: handleInputChange,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Controls.Dropzone, {\n        handleFileAdd: handleFileAdd,\n        handleFileDelete: handleFileDelete,\n        files: values.files,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }));\n\n    case 7:\n      return /*#__PURE__*/React.createElement(FormPages.SubmitPage, {\n        handleSubmit: handleSubmit // nextStep={nextStep}\n        ,\n        prevStep: prevStep,\n        values: values,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, \"Confirmation!\"));\n\n    case 8:\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, \"Your schedule has been sent!\");\n  }\n};\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\n\n\nexport default DataForm;","map":{"version":3,"sources":["/Users/calebren/Desktop/Github/test-aws-app/my-react-app/src/Pages/DataForm.tsx"],"names":["React","Typography","useForm","Controls","FormPages","PagesList","initialFieldValues","step","fullName","email","numBlendedLearning","numSchedules","numDays","numSetsSameDay","numPairsDiffDay","numSpecialSets","specialSets","files","DataForm","values","setValues","errors","setErrors","handleFileAdd","handleFileDelete","handleInputChange","handleSpecialSetChange","helpTexts","numRooms","validate","re","temp","test","Object","every","x","nextStep","prevStep","handleCaptcha","value","console","log","handleSubmit","e","preventDefault","window","alert","postUrl","payload","num_students","num_rooms","num_days","max_grade","num_same_day_sets","num_diff_day_pairs","num_special_sets","num_rooms_to_be_packed_into","fraction_for_special_set","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, InputAdornment, Tooltip, Typography, Divider, Slider } from '@material-ui/core';\nimport { useForm, Form } from '../Components/useForm';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Controls from '../Components/Controls/Controls';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport FormPages from './FormPages';\nimport PageHeader from '../Components/PageHeader';\nimport PagesList from './FormPagesList';\n\nconst initialFieldValues = {\n    step: 1,\n    fullName: '',\n    email: '',\n    numBlendedLearning: 0,\n    numSchedules: 0,\n    numDays: 1,\n    numSetsSameDay: 0,\n    numPairsDiffDay: 0,\n    numSpecialSets: 0,\n    specialSets: [],\n    files: [],\n};\n\nconst DataForm = (): any => {\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleFileAdd,\n        handleFileDelete,\n        handleInputChange,\n        handleSpecialSetChange,\n    } = useForm(initialFieldValues);\n\n    const helpTexts = {\n        numBlendedLearning: 'Enter the number of students in the school who will participate in blended learning.  You will provide details about the students later, in csv (comma-separated-values) files.',\n        numDays: 'Please enter a positive number.',\n        numRooms: 'The number of classrooms available every day.',\n        numSetsSameDay: 'The code allows the user to specify sets of children who should attend in-person instruction on the same days. The sets can be arbitrarily large, but the larger the set is, the less likely the goal will be achieved. You need to enter the number of such sets, 0 if there are none. The actual sets themselves will be added later. Keep in mind that the optimizer may not succeed at satisfying all the constraints.',\n        numPairsDiffDay: 'You may also specify pairs of 2 students each who should be scheduled on different days. Enter the number of such pairs, 0 if there are none.',\n        numSpecialSets: 'Enter here the number of special sets, 0 if there are none.',\n    };\n\n    // validate for names and emails\n    const validate = () => {\n        const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n        let temp = {\n            fullName: '',\n            email: '',\n        };\n        temp.fullName = values.fullName ? '' : 'Your name is required.';\n        temp.email = re.test(values.email) ? '' : 'Your email is required.';\n        setErrors({\n            ...temp\n        });\n\n        return Object.values(temp).every(x => x === '');\n    }\n\n    // proceed to next step\n    const nextStep = () => {\n        const { step } = values;\n        setValues({\n            ...values,\n            step: step + 1,\n        });\n    };\n\n    // go back to previous step\n    const prevStep = () => {\n        const { step } = values;\n        setValues({\n            ...values,\n            step: step - 1,\n        });\n    };\n\n    const handleCaptcha = (value: any) => {\n        console.log(\"captcha value:\", value);\n    };\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        nextStep();\n        window.alert('validated response...');\n        // if (validate()) {\n        const postUrl = 'https://lqi0rcs9b1.execute-api.us-east-1.amazonaws.com/prod/';\n        // const postUrl = 'https://scheduler.schedyool.com'\n        const payload = {\n            email: \"howard@cc.gatech.edu\",\n            num_students: 800,\n            num_rooms: 30,\n            num_days: 3,\n            max_grade: 5,\n            num_same_day_sets: 160,\n            num_diff_day_pairs: 100,\n            num_special_sets: 3,\n            num_rooms_to_be_packed_into: [[1, 1, 2, 2, 1, 2], [3, 2, 3, 2, 2, 3], [2, 2, 2, 2, 2, 2]],\n            fraction_for_special_set: [0.4, 0.3, 0.4]\n        };\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n        };\n        fetch(postUrl, requestOptions)\n            .then(response => response.json())\n        // }\n    };\n\n    switch (values.step) {\n        case 1:\n            return (\n                <PagesList.PageOne \n                    nextStep={nextStep}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                />\n            );\n        case 2:\n            return (\n                <PagesList.PageTwo\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                />\n            );\n        case 3:\n            return (\n                <PagesList.PageThree\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                />\n            );\n        case 4:\n            return (\n                <PagesList.PageFour\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    handleSpecialSetChange={handleSpecialSetChange}\n                    values={values}\n                />\n            );\n        // Sliders for special sets\n        case 5:\n            return (\n                <PagesList.PageFive\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    helpTexts={helpTexts}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                />\n            );\n        // Dropzone for files\n        case 6:\n            return (\n                <FormPages.MiddlePage\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    handleInputChange={handleInputChange}\n                    values={values}\n                >\n                    <Controls.Dropzone\n                        handleFileAdd={handleFileAdd}\n                        handleFileDelete={handleFileDelete}\n                        files={values.files}\n                    />\n                </FormPages.MiddlePage>\n            )\n        case 7:\n            return (\n                <FormPages.SubmitPage\n                    handleSubmit={handleSubmit}\n                    // nextStep={nextStep}\n                    prevStep={prevStep}\n                    values={values}\n                >\n                    <Typography>Confirmation!</Typography>\n                </FormPages.SubmitPage>\n            );\n        case 8:\n            return (\n                <h1>Your schedule has been sent!</h1>\n            )\n    }\n};\n\n/*\n                    <FormControl>\n                        <FormLabel>Radios</FormLabel>\n                        <RadioGroup row={true}>\n                            <FormControlLabel value=\"value-1\" control={<Radio />} label=\"Button 1\" />\n                            <FormControlLabel value=\"value-2\" control={<Radio />} label=\"Button 2\" />\n                            <FormControlLabel value=\"value-3\" control={<Radio />} label=\"Button 3\" />\n                        </RadioGroup>\n                    </FormControl>\n*/\nexport default DataForm;"]},"metadata":{},"sourceType":"module"}